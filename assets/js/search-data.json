{
  
    
        "post0": {
            "title": "Note Template",
            "content": "Take some additional notes that you would like here for 3.12 and 3.13. We will be looking for additional notes from the presentation. . What are procedures? . Fill in the blanks please: . Procedure: a named group of programming instructions that may have parameters and return values. . Parameters: input values of a procedure. . Arguments: specify the values of the parameters when a procedure is called . Modularity: Separating a program&#39;s functions into independent pieces or blocks, each containing all the parts needed to execute a single aspect of the functionality . Procedural Abstraction: provides a name for a process that allows a procedure to be used only knowing WHAT it does, not HOW it does it. . What are some other names for procedures?: functions, def . Why are procedures effective?: Procedures allow someone to execute a block of code that would otherwise have to be rewritten several times. This saves time and effort, and makes the code more modular. . My Notes: . Procedures can be called recustively, meaning th same procedure can be called inside the procedure. However, for this to work, there must be some else, break, or exit case, or else the function will keep calling itself forever | python uses def to define a procedure but javascript uses function | in both languages, if you want, you can have a return statement which returns whatever you would like, and stores it in a variable if the function is set equal to a variable in the main code. | procedures are defined in the order name, arguments | a procedure must be defined before use | . Challenge 1 below: Add the command that will call the procedure. . decimal = 11 def convertToBinary(n): power = 0 while 2**power &lt;= n: power += 1 power -= 1 answer = &quot;&quot; while power &gt;= 0: if n &gt;= 2**power: n -= 2 ** power answer += &quot;1&quot; else: answer += &quot;0&quot; power -= 1 return answer print(convertToBinary(decimal)) . 1011 . Challenge 2 below: Complete the Min and Max procedure in either JavaScript and Python using the instructions from the JavaScript page. (JavaScript will get you a extra 0.1) . def findMax(listnums): largest = -10000000000000000 for i in listnums: if i &gt; largest: largest = i return largest def findMin(listnums): smallest = 10000000000000000 for i in listnums: if i &lt; smallest: smallest = i return smallest print(findMax([1,-3,-5,2,21437,-218,109,0])) print(findMin([1,-3,-5,2,21437,-218,109,0])) . 21437 -218 . . bkjh . Category My Score Collegeboard Score Comments . Program purpose and function | 1 | 1 | A throrough explanation of the program purpose and function with all the required parts is present | . Data Abstraction | 1 | 1 | clear code segments shown with explanation of contribution toward program purpose | . Managing Complexity | 1 | 1 | explanation on use of list and how the code owuld change if not for a list | . Procedural Abstraction | 1 | 1 | Good descriptions, clearly explaining the procedure and all of the details | . Algorithm Implementation | 0 | 1 | Iteration is present, but only 3 items are iterated through, so it seemed trivial | . Testing | 1 | 1 | good testing, explaining each test | . Homework/Hacks: For the hw, you have two options, easy or hard. The easy hack is for a 2.7 + extra work for the full 3. The easy hack is simply creating your own procedure with your own creativity. Since there is a lot of leeway for this one, you must do additional work to get a 3. For the hard hack, below is the start to a character to binary convertor. This is just a template, but the goal is to translate &quot;APCSP&quot; into binary. You can delete the existing code if you want. The only contraint is that you must use a procedure. Doing this will get you a 3. . def daysapart(day1,month1,year1,day2,month2,year2): months = [0,31,28,31,30,31,30,31,31,30,31,30,31] answer = months[month1]-day1 for i in range(month1,len(months)): answer += months[i] year1copy = year1 while year1copy &lt; year2: answer += 365 year1copy += 1 for i in range(len(months)-1,month2-1,-1): answer -= months[i] answer -= months[month2]-day2 return answer-1 month1 = int(input(&quot;enter a number of a month&quot;)) day1 = int(input(&quot;enter a day in that month&quot;)) year1 = int(input(&quot;enter a year&quot;)) print(&quot;the second date should be after the first&quot;) month2 = int(input(&quot;enter a number of a month&quot;)) day2 = int(input(&quot;enter a day in that month&quot;)) year2 = int(input(&quot;enter a year&quot;)) print(&quot;the number of days between &quot;+str(month1)+&quot;/&quot;+str(day1)+&quot;/&quot;+str(year1)+&quot; and &quot; +str(month2)+&quot;/&quot;+str(day2)+&quot;/&quot;+str(year2)+ &quot; is &quot; +str(daysapart(day1,month1,year1,day2,month2,year2))) . the second date should be after the first the number of days between 5/5/1900 and 8/6/2000 is 36592 . def charToBinary(c): n = ord(c) power = 0 while 2**power &lt;= n: power += 1 power -= 1 answer = &quot;&quot; while power &gt;= 0: if n &gt;= 2**power: n -= 2 ** power answer += &quot;1&quot; else: answer += &quot;0&quot; power -= 1 return answer answer = &quot;&quot; print(&quot;&#39;&#39;APCSP&#39;&#39; in binary is &quot;) for i in &quot;APCSP&quot;: answer = answer + charToBinary(i) + &quot; &quot; print(answer) # The output shown below is the output you are supposed to get . &#39;&#39;APCSP&#39;&#39; in binary is 1000001 1010000 1000011 1010011 1010000 .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/2023/03/05/notetemplate.html",
            "relUrl": "/2023/03/05/notetemplate.html",
            "date": " • Mar 5, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Extra Credit",
            "content": ". Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/extra",
            "relUrl": "/extra",
            "date": " • Mar 5, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Week 25 Trimester 2 N@TM",
            "content": "My Gallery: . . Reflection on the above piece: . Reflection Here . N@TM as an Experience: . I was at the night at the musuem for two different classes, approaching the experience in two different ways. In this class, I was more looking for other CSP projects, and looking at their functionality and how they fit the collegeboard criteria. However for my other class, Digital Media Productions, I was looking more at the art and beauty of the artwork. In this way, I was able to appreciate other students’ APCSP Projects as more than just websites, but as the hard work all of the other kids put in to make their projects happen. A lot of the projects seemed really inspired, and I’ll go through them one by one below. . A small change I’d make is organizing the classes a little more, and maybe advertizing the tour a little more. Otherwise, it seemed a lot better than last trimester, and I was really ahppy with how many people took interest in my game and started playing it impromptou. . Other Strudents’ Projects: . Dolphin fitness was a really cool project. The concept was that users could creat accounts and enter their information about body and workouts, and then it would calculate the amount of exercise needed or calories. I think it was a really cool concept, and as another feature, it could be cool if there could be a calendar to track workouts, and maybe a graph of workouts for every week. This was a really cool project made by an APCSA student. It was a more advanced version of my own project from last trimester, the kernel academic organizer. Thie project allowed to create sets of cards for each subject like quizlet, and let you test yourself. However, a key difference was that this project lets you keep track of how many you got right as a good way to study and know where you stand. Another APCSA project. While I wouldn’t call it a new idea, I find it really cool that creating an online chess website is within the scope of APCS in del norte. The game worked pretty well, and even included special moves, such as castling and em passant. The only improvement I’d suggest is to make it offline, and generate game codes that you can send to others. This website showed the nearest airport to any city, and I imagine that it’s purpose would be to plan vacations and travels. There’s not too much to say, but id did implement an airport and map API with coordinates. This project was a dating app made by one of my friends, which allowed a user to create an account and hook up with other accounts. The integration wasn’t fully complete, but it was still in development and is bound to be finished by now. This project was a hypothetical cat cafe. I found the concept really creative, and their implementation for reviews, wordle, and mroe were on the dot. The only thing I found weird was that not much was related to it actually being a cafe, and it focused mroe on side things like games. .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/posts/tri2n@tm",
            "relUrl": "/posts/tri2n@tm",
            "date": " • Feb 25, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Week 20 Trimester 2 Midterm Exam",
            "content": "Score: 48/50 = 96% . Proof: . Question 13: . . Analysis: . The “AND” operator returns true if and only if both of its arguments evaluate to TRUE. I had gotten that option III was correct, but I claimed that option I was a correct answer, when in reality, it was option II. This is beacause if option I were to be the case, then the student would be not able to vote when they are exactly 18, as the less than or equal to sign is used. Option II is correct since a kid 16 or older can drive, but if you are not 18 or older(which is what the option says), you cannot vote, so II, along with III, which is the reverse of II, is the correct answer. This is because while a person in the desired age range can be exactly 16, they cannot be exactly 18 or they will be allowed to vote. | . Question 16: . . Analysis: . I assumed that, like iteration, sequencing, and selection, searching was also a programming structure. But now that I know, it makes total sense, as searching is made up of useing a combination of the other three, and searching can be either sequantial searhc or binary search, which combine programming structures in different ways to make algorithms. Iteration couldn’t have been the answer, as that would already be implemented before. Sequencing cannot be the answer, as numbers do not need to be in any order to sum, since addition is commutative. That leaves selection, the correct answer, as each even number muct be selected to add to the sum. | . Things to do better: . Read questions more carefully | Don’t take as long on each MCQ the AP exam is 2 hours for 70 questions, which is less than 2 minutes per question | . | Make sure to understand the collegeboard language(&lt;- is equals(-), and indexing begins with 1) | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/posts/tri2mid",
            "relUrl": "/posts/tri2mid",
            "date": " • Jan 28, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Lesson Notes on Lesson 5.1 to 5.6",
            "content": "5.1 Beneficial and Harmful Effects: . Drones: Benefits: smaller flight vehicles that don’t have the requirement of carrying heavy stuff | Fun recreation | helps get photos in places humans can’t easitly reach | potential delivery | . | Harms: can be used for illegal deliveries | can be used for terrorist and military war purposese | can be used to spy on people with cameras | may interfere with other flying vehicles, animals, and nature | could interfere with other things by crashing into them | . | . | Video Games/ Social Media Benefits: allows people and kids to connect easier | people can see what’s new in the world instanty | connects people across grat distances | in some cases, can save time and resources to meet physically | provide entertainment | breaks from reality | . | Harms: Can lead to depression | competition for followers | everyone seems to have a better life than you | wastes time | misinformation | screen damages eyes long term | video games can be extremely addicting | can cause violence in kids | . | . | . My 3: . Hacking Benefits: Allows for tech support to help people acess their resources | helps government track down dangerous criminals | helps teach kids how to AVOID being hacked | . | Harms: Scammers can use it to acess your credit information and take your money | Hackers can use it to get your presonal information and threaten you or others with it | It can beused by governments to start wars and acess other countries’ things | . | . | YouTube: Benefits: entertaining | good break when used sparingly | provides people a job | some videos teach you concepts you may need revision on from school | helps with home improvements and/or DIY projects | good tips and tutorials | . | Harms: VERY distracting | thumbnails and titles are misleading | misinformation | Fake scenarios made for videos to amaze you | . | . | Self-Driving Cars Benefits: Can reduce human error if perfect | reduce human stress on the road | Can lead to breakthroughs with improvements(e.g. deliveries) | Cool concept | less work needed to go from point A to point B | . | Harms: If not implemented properly, can be catastrophic death, injury, destruction | . | Could remove jobs from uber drivers and delivery workers | Makes people more lazy | . | . | Our CPT project - Theee Arcade: Benefits: can reduce stress with a fun game | provides escapism | presents users with a challenge | lets multiple people play and stores their results for healthy competition | . | Harms: Can get very distracting for people trying to do work | unhealthy competition can fighting could occur over who did better on a game | can get people addicted and on a screen for a very long time | . | . | . Dopamine Issues: . I would say that these issues are definitely real. There are many things that can distract a person from school, health, and relationships, but video games are a major one. I’ve seen people who are very addicted to video games. I’ve never really played, and when I have, I’ve been really bad at video games, so I’ve never had this problem. However, something which distracts me a lot is youtube, and a lot of times when doing work, I get distracted by youtube, and lose sight of the task at hand | . 5.2 Digital Divide: . Reflection: . In a digital world, one can empower themself by using all the technology at their hand to good use, and use coding or other technology to create somehting beneficial to everyone, weather it be something simple like a game or small invention to help people, or something complex like a website to help people or a machine. | An empowered person can help someone who is not so lucky by involving them with their projects, or getting them started on new projects that they will like. They can also tell them what worked best to empower them so that the other person can use those suggestions to empower themselves. | Something which may be blocking digital empowerment at DNHS is all of the websited blocked ont he wifi. While blocking websites like games or innapropriate sites make sense, I don’t see the purpose in some of the blocked websites that I have come across. For example, once I came acoss a periodic table site that was blocked. Another example is once I needed to research a part for robotics to see if it would work, but the company website was blocked. While I 100% understand blocking discord, it makes communication a hastle, and people use texing, snapchat, or vpns anyway. | In my opinion, digital divide is an issue, but not one that isn’t easily overcome by people being more open and sharing their resources with others | 5.3 Computing Bias: . Crossover Group Up: . Tiktok is generally used by younger audiences, while facebook is mostly used by the older generation. Younger generations tend to have shorter attention spans, and it takes much less time to watch a 30 second tiktok video than read articles or watch long videos on facebook. In these platforms, I don’t believe that they are purposely excluding a group of people, as obviously, the more people they attract, the better for the company. However,t he website fromat tends to cater to a specific group of people. I don’t think this is a huge issue to be corrected, but maybe having another social media platform that mixes elements from both and can attract people of any generation would allow more and differnt people to communicate and connect. | There are two ways to look at virtual assistants having female voices. The most obvious way is to think that this was a sexist decision, as women are seen generally as assistants to people, helping them out with tasks rather than doing it themselves. However, it can also be seen as women having a more soothing voice as compared to men, due to their natural caring motherly instince. Whatever the case, this was not done by people who thought about the above and wanted to purposely put down or uplift women. Rather, a female voice was probably liked the best by test audiences for the voice assistants, so it was set as the default. Whatever the case, I do not believe that this is harmful, and the voice can always be set to the user’s liking. | FAANG: Facebook: Facebook is known for having a lot of ads. These ads often pop up ont he facebook market place, where anyway the user is probably looking to buy somehting. | Amazon: In a similar way, amazon places ads everywhere, and also lends itself and specifically makes the prouducts that they want you to buy more accessible. Amazon and its users also have a lot of bots to artificially inflate the star ratings and add fake reviews. | Apple: iphones and other apple prouducts work best when connected with each other. For example, airpods work best with apple phones, you can connect all your apple devices and text on mac. You can also have special connections with other apple users, such as airdrop, gamepigeon, and faster/more abilities with texting. | Netflix: netflix often gives you recomendations based on what you previously watched. This can often keep you in a shell of what you usually like, and prevent you from exploring all the content there is, by takin Netflix’s recomentations. | Google: Google is often influences by websites which pay them more. A website or ad can pay google to be at the top of a search, even if that website contains viruses, or isn’t as related to the topic. Google also knows what you search, and can use that to give you relevant ads for things you may like. As Pairs: . | . | The owner of the computer seems to think that the AI was intentionally racist, and couldn’t detect him due to that. He was yelling at the screen, and specifically claimed that the developers did this because he was black. | In actuality, however, this most likely happened due to an error with testing. For an AI to work as well as possible, it needs a lot of training data from all different places, and it was likely that the AI was only trained with caucasian or lighter skinned faces, and therefore didn’t realize that the man’s face was a face. | This was probably not intended to be harmful or exclude, but was a creator oversight into the situation | Thie should 100% be corrected, and it would be a pretty easy fix to, just training it with more different kinds of faces | I would bring in people and use images of people from around the world for better results. | Summary: . Computing bias is usually not intentional, but often it can lead to harmful results, even if unintended by the creator. If it is intended, people need to be wary of it and make sure not to get caught in a trap of falling for the website’s tricks. An exxample I can think of for the first case is google translate. Often, in languages without gender specific pronouns, it will stereotype the sentence based of common gender stereotypes, rather than including both male and female pronouns. For example, if you enter, “He/She is a firefighter” in a nother language, it will return “He is a firefighter”, but it would return she if you said maid or something similar. . 5.4 Crowdsourcing . Crossover Group Up: . I used a wikipedia API that I found from the interned for my Scrum project from trimester 1. Our group used this API to get data for our academic organizer. We were able to get data from wikipedia to display it on the website. Our group also used a memes api from RapidApi for one of the assignments during the first trimester, to get memes from. I’ve also created 2 different kinds of APIs for countries, one with infor for each country, and another which was just a list of countries. Lastly, I’ve used a couple of APIs in non-school projects. | The biggest discovery that I have made in github is looking at the commit history of both my classmates and both Mr. Yeung and Mr. Mort. I found out how hard different friends work, and what results that leads to, including exploring what work that others do to achieve their grades, helping me understand what is really required to get a certain score. | Hacks: . A crowdsource idea is to survey all of the APCSP students on their opinion of the class, what they could do better, and general questions on how they are doing for the PBL project. | I don’t believe that my project specifically can benefit from crowdsourcing, as it is just a game, and doesn’t need user data. However, the arcade as a whole may be able to get a review, or a leaderboard ranking, and somehow implement crowdsourcing that way. | At N@TM, I plan to send a google form to each one of the people who come and take a look at our project, and get a review, as well as project glows and grows, to change over the next week before the final submission | 5.5 . Blog Post Reflection: . The use of GPL (General Public Licensing) software can void the rights to charge for patents and software. | Qualcomm, a company that makes money on patents, has lawyers analyzing all code produced to ensure compliance with licenses and to protect their ability to charge royalties. | An author needs to determine a license when adding or selecting one on GitHub. Creative Commons Zero v1.0 Universal waives copyright, while the MIT License allows the use of code freely but requires credit to the author. | The GPL License lets people do almost anything with the project, but distributing closed source versions is not allowed. | Companies must comply with the terms of licenses and cite sources. | Creative Commons software is free but individuals and companies must figure out techniques and business models to use it according to the license. | Red Hat is an example of a company that gave away its Linux distribution under GPL license, but established a business model around buying support agreements. | Qualcomm figured out how to mix Patent and GPL businesses. | Creative Commons and Open Source are free terminologies but businesses need income to survive. | . | I think that it’s good that people can claim a right to their own IP, and prevent others from using it without credit/permission. However, liscenses can often prevent others from creating truly amazing things, that in no way mean to claim the original creator’s work as their own. | License: MIT License | Copyright (c) [2023] [GamesArcade] . Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: . The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. . THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. . 5.6 Safe Computing . Blog Post Reflection: . Any kind of personal information that you probably dont want to be on the internet, like name, adress, birthday, SSN, IP adress, or more can be considered PII. PII specific to APCSP is whenever we had to write our names or other information in the beginning of the class, or anything from github, because so much information about a person can be found on github. | I think that PII is important for a person to keep safe, or else if others find it, it can get a person into big trouble or in danger. | Good Password: %^&amp;*GYGYTGycjhyeyg Bad Password: Chinmay123 other authentification steps are PATs, I am not a robot, and forgot password questions. | Symmetric encryption is when all words have the same decryption key, while assymetric encryption is when each code has a different decryption key. | Encryption in AWS deployment is using SSH keys. |",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/posts/516",
            "relUrl": "/posts/516",
            "date": " • Jan 28, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "CPT Prep, my part",
            "content": "My project: . The CPT project that I an submitting to collegeboard will contain: A random letter generator, that will generate one of the 26 letters ont he alpahbet randomly | a start button, which will begin the countdown clock | a countdown clock, which will decrement every second and the initial time will change based on the numebr of countries the user has to guess | multiple country guess bars, one for each country that begins with the corresponding letter | a check function, which will return a) that the country is valid and begins with the letter generated, b) that the country is valid but doesn’t begin with the specified letter, c) that the country begins with the specified letter but isn’t a real country, or d) both b and c | A results sentence, letting the user know how many they got correct | A leaderboard, storing the user’s time and number of countries guessed right | If time permits, and option to do all of the above, except with the last letter of the country rather than the first | . | . What my video will show: . Me playing the game with two different letters one letter will have a lot of countries beginning with it | one letter will have very few countries beginning with it | I will guess some correct countries | I will guess some incoreect countries | I will guess some non-countires | I will show the leaderboard with each try | . | . Collegeboard Criteria: . Program Purpose/Function Purpose: Entertainment and testing knowledge | Function: Chooses a letter, and gives the user 10 seconds to guess 3 countries which begin with said letter. | . | Data Abstraction Use of multiple lists, to store user guesses, and to store a list of countries which begin with each letter of the alphabet | . | Managing Complexity Chooses a random letter from the list to have the user guess for, and compares the user’s guesses to make sure each is correct. This program becomes almost impossible without lists, but it may be possible to directly use the country names from the database, but would become much more complex | . | Procedural Abstraction A procedure to check a user’s guess and make sure that country exists and begins with the right letter | . | Algorithm Implementation sequential search both to check each letter in a word and each word in the guesses/ | . | Testing described above | . | . What I may need: . An API for countries while I could just copy a current list, countries are often added, deleted, split, or merged, so it would be good to have an uupdating list with an API to the United Nations website | . | A time API or python package It would be helpful to have a time package, as my project is time based, so I would need a kind of countdown clock for the user to see the time left to name the countries | . | A changing database/API something similar to the sqlite table would work, storing each user for the leaderboard, along with their time and number of countries guessed. | . | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/posts/cptprep",
            "relUrl": "/posts/cptprep",
            "date": " • Jan 28, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "CPT Scoring 2",
            "content": "Submission 1 . Category My Score Collegeboard Score Comments . Program purpose and function | 0 | 0 | While a brief description was given for the function, no clear purpose was defined | . Data Abstraction | 0 | 0 | Two code segments shown, but both show the list and it’s values, but not its use toward the program purpose | . Managing Complexity | 0 | 0 | no thorough explanation on how the list manages complexity | . Procedural Abstraction | 0 | 0 | once again, no explanation that is well and explanatory | . Algorithm Implementation | 0 | 0 | no included program code | . Testing | 1 | 1 | good testing, explaining each test | . Descrepencies: None . Submission 2 . Category My Score Collegeboard Score Comments . Program purpose and function | 1 | 1 | A throrough explanation of the program purpose and function with all the required parts is present | . Data Abstraction | 1 | 1 | clear code segments shown with explanation of contribution toward program purpose | . Managing Complexity | 1 | 1 | explanation on use of list and how the code owuld change if not for a list | . Procedural Abstraction | 1 | 1 | Good descriptions, clearly explaining the procedure and all of the details | . Algorithm Implementation | 0 | 1 | Iteration is present, but only 3 items are iterated through, so it seemed trivial | . Testing | 1 | 1 | good testing, explaining each test | . Descrepencies: I gave the Algorithm implementation a 0, as collegeboard gave it a 1. This is because I assumed iteration through a small list would be considered trivial, but apparently now I know 3 is an okay number for useful iteration. . Submission 3 . Category My Score Collegeboard Score Comments . Program purpose and function | 1 | 0 | The purpose was good, but the function of the program, while elaborated later on in the written response, was not included in that section | . Data Abstraction | 1 | 1 | Good evidence and explanation of the list(same applies below) | . Managing Complexity | 1 | 1 | thorough explanation of the use of lists to contribute toward the purpose and how the program would be with the absence of lists | . Procedural Abstraction | 0 | 1 | The procedure seemed overly simple and lacked the complexity I sayw in others’ | . Algorithm Implementation | 0 | 1 | no separate code, and all 3 algorithmic apporach didn’t seem to be present | . Testing | 1 | 1 | Well explained tests, testing different types of inputs. | . Descrepencies: I gave a 1 while collegeboard gacve a 0 on program purpose and funtion, as I initially thought the purpose statement was good, but forgot to look at the function part, which wasn’t as stellar. For Procedural abstraction and algorithm implementation, I gave a 0 while collegeboard gave a 1. As a coder with a bit of a more algorithmic background, I was probably expecting a little bit more than the scope of the course from the people I graded. . Submission 4 . Category My Score Collegeboard Score Comments . Program purpose and function | 0 | 1 | The program purpose given seemed more like a program function, and didn’t really show the problem or creative intent | . Data Abstraction | 0 | 0 | Two code segments shown, but lacked depth and undestanding of the way lists work | . Managing Complexity | 0 | 0 | same as above, but adding that the explanation wasn’t thorough | . Procedural Abstraction | 1 | 1 | Well done procedure and explanation of that procedure, with clearly defined parameters, use, and sub-procedures. | . Algorithm Implementation | 1 | 1 | Procedure incuded searching and iteration algorithmic techniques. | . Testing | 1 | 0 | Not amazing test cases, but were still passable, but weren’t that varied | . Descrepencies: I gave a 0 as collegeboard gave a 1 for program purpose and function. This was becuase I thought that the purpose sounded like a function, but collegeboard didn’t think so. In addition, I thought the testing was bad but passable, but collegeboard said it was a zero. . Reflection: . Notes for my own create performance task . Don’t put as much emphasis on the Algorithmic implementation, and focus more on the abstraction | Be sure to explain each section well in an easy to read format for the graders | The program purpose should be a purpose and not describe the function | it should either explain the problem being solved or the createve idea behind making the program. A submission can fail to meet the requirements in 2 ways. The evidence with the code example is overly simple or not present | a poor explanation exists, not connecting with the code much. | | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/posts/cpt2",
            "relUrl": "/posts/cpt2",
            "date": " • Jan 23, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "CPT Scoring 3",
            "content": "Submission 1 . Category My Score Collegeboard Score Comments . Program purpose and function | 1 | 1 | While the descriptions were short, the program functionality was technically described. I would have explained the purpose better, and mentioned that the computer choice was random, but all the requirements were still met | . Data Abstraction | 0 | 0 | Two code segments shown, clearly explaining the list’s name and representation, with clear code explanation of how the list is used. However, it only shows code for how the list is inderectly used, as opposed to showing the code which actually generates the random choice from the list | . Managing Complexity | 0 | 0 | Good explanation of the list managing complexity, and clearly explaining a method which could be used as an alternative to the list. Howver, future changes to the size of the list will not work with the if statements, which will only account if the choice was rock, paper, or scissors | . Procedural Abstraction | 1 | 0 | all requirements present, with solid explanations of the procedure’s use in the program | . Algorithm Implementation | 1 | 1 | clearly dscribed algorithm with good code shown | . Testing | 1 | 1 | good testing, explaining each of the calls | . Descrepencies: While I gave a 1 on procedural abstraction, collegeboard gave a 0. This is because I neglected the fact that the program did not explain how the procedure contributed to the overall program . Submission 2 . Category My Score Collegeboard Score Comments . Program purpose and function | 1 | 1 | Clear difference between the program purpose, which is enteretainment on a boring day,a nd the program’s fucntion, which is to play a hangman hgame with the user, where the user has to guess letters. | . Data Abstraction | 1 | 1 | Use of lists to show words and abstract the data. Two good code segments, with good explanations | . Managing Complexity | 1 | 1 | Strong explanations on how the list manages complexity, and gives a plausible explanation of how the program would operate without a list, by generating a random number and using if statements instead, which would increase the complexity and make the program harder to use. | . Procedural Abstraction | 1 | 1 | Good descriptions, clearly explaining the procedure and all of the details. It also shows how the “check” function inteegrates into the overall program | . Algorithm Implementation | 1 | 1 | Good use of iteration, conditionals, and testing, with good explanation of how it all comes together, | . Testing | 1 | 1 | good testing, explaining each test case,a nd how it tests something different | . Descrepencies: None . Submission 3 . Category My Score Collegeboard Score Comments . Program purpose and function | 1 | 1 | solid explanation of the program’s purpose,which is informatory, and the program’s function, which is to give the user state and website information. | . Data Abstraction | 0 | 0 | 2 code segments and a name for the list are present, but no details on how they are integrated. Also, the initializatied lists, and the list shown are different. | . Managing Complexity | 0 | 0 | Explains taht the program complexity would increase without a list, but fails to mention how, and fails to mention how the program would be executed without a list. | . Procedural Abstraction | 0 | 0 | An extremely basic and repetitive procedure, which was much more complex than it needed to be, if all the states were just stored in a list rather than using 50 if statements. No use of searching or iteration | . Algorithm Implementation | 1 | 0 | while being a very bad version of it, some sort of search is present, so there is some algorithm | . Testing | 0 | 0 | Only one test shown in the video, with one state and one wibsite name, and not showing what the program would do in different outputs | . Descrepencies: I gave a 1 while collegeboard gacve a 0 on Algorithm Implementation. I assumed that a sign of algorithmic implementation was good enough to get the point, but now I know that the algorithm must be intuitive, and complete the task in the most efficient was possible. . Submission 4 . Category My Score Collegeboard Score Comments . Program purpose and function | 0 | 1 | The program purpose was very minimal, and lacked the depth that others had. Also, some of the purpose was written with the function | . Data Abstraction | 1 | 1 | Two code segments were shown, and it clearly shows the functional use of them. | . Managing Complexity | 0 | 1 | Good explanation of how the program would be more complex without lists, but not through enough explanation of how the list manages complexity. It says theat it keeps all the data, but fails to specify what kind of data and so on | . Procedural Abstraction | 1 | 1 | The touching procedure is clear and clearly returns true whent he hook and whatever kind of fish are touching | . Algorithm Implementation | 1 | 1 | The algorithm is not intensive and long, but iteration is used to keep track of the fish caught. The algorithm also has a really cool portion when touching the fish | . Testing | 0 | 0 | While the hard level was shown, the user did not show how the easy level worked. He also didn’t show what would happen in specific cases when the fishing hook was dropped | . Descrepencies: I gave a 0 as collegeboard gave a 1 for program purpose and function, as well as managing complexity. This is because I keep making the assumption that this will be graded in the english way, with emphasis on the explanation, and I always forget how the emphasis is on the code and its purpose. . Reflection: . Notes for my own create performance task . Don’t put as much emphasis on the Algorithmic implementation, and focus more on the abstraction | Be sure to explain each section well in an easy to read format for the graders | The program purpose should be a purpose and not describe the function | it should either explain the problem being solved or the createve idea behind making the program. A submission can fail to meet the requirements in 2 ways. The evidence with the code example is overly simple or not present | a poor explanation exists, not connecting with the code much. | | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/posts/cpt3",
            "relUrl": "/posts/cpt3",
            "date": " • Jan 22, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Intro to Object Oriented Programming",
            "content": "# A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password, classOf, dob): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._classOf = classOf self._dob = dob # a classOf getter method, extracts classOf from object @property def classOf(self): return self._classOf # a setter function, allows classOf to be updated after initial object creation @classOf.setter def classOf(self, classOf): self._name = classOf # a dob getter method, extracts dob from object @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # a setter function, allows dob to be updated after initial object creation @dob.setter def dob(self, dob): self._dob = dob # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters @property def age(self): today = date.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) @property def dictionary(self): dict = { &quot;name&quot; : self.name, &quot;uid&quot; : self.uid, &quot;dob&quot; : self.dob, &quot;age&quot; : self.age } return dict # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return json.dumps(self.dictionary) # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; def __dir__(self): return [&quot;name&quot;, &quot;uid&quot;] # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: u1 = User(name=&#39;Chinmay Ramamurthy&#39;, uid=&#39;Gambit&#39;, password=&#39;sh2810sh&#39;, classOf = 2025, dob=date(2007, 4, 17)) print(&quot;JSON ready string: n&quot;, u1, &quot; n&quot;) print(&quot;Raw Variables of object: n&quot;, vars(u1), &quot; n&quot;) print(&quot;Raw Attributes and Methods of object: n&quot;, dir(u1), &quot; n&quot;) print(&quot;Representation to Re-Create the object: n&quot;, repr(u1), &quot; n&quot;) . JSON ready string: {&#34;name&#34;: &#34;Chinmay Ramamurthy&#34;, &#34;uid&#34;: &#34;Gambit&#34;, &#34;dob&#34;: &#34;04-17-2007&#34;, &#34;age&#34;: 15} Raw Variables of object: {&#39;_name&#39;: &#39;Chinmay Ramamurthy&#39;, &#39;_uid&#39;: &#39;Gambit&#39;, &#39;_password&#39;: &#39;sha256$cVjrOaDGVyyWMs8i$362f6825f8c4da42002a9bdb2a0aa8cdeb9fed17ddf3265324c690887712e7bb&#39;, &#39;_classOf&#39;: 2025, &#39;_dob&#39;: datetime.date(2007, 4, 17)} Raw Attributes and Methods of object: [&#39;name&#39;, &#39;uid&#39;] Representation to Re-Create the object: Person(name=Chinmay Ramamurthy, uid=Gambit, password=sha256$cVjrOaDGVyyWMs8i$362f6825f8c4da42002a9bdb2a0aa8cdeb9fed17ddf3265324c690887712e7bb) . My own class is below. I wrote it in java, just to see if a) I still remember it, b) to make sure the new stuff I learned could be applied anywhere, c) for an extra challenge . code: . output: .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/oop/",
            "relUrl": "/oop/",
            "date": " • Jan 15, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "CPT grading - Example",
            "content": "1: . Reporting Category | My Score | College Board Score | Comments | . Program Purpose and Function | 0 | 0 | The student didn’t meet the requirements, since they lacked a clear use of the program, but the function is clearly defined. I’d give this a 0.5 if I could | . Data Abstraction | 1 | 1 | The student sucessfully did data abstraction, through their use of math to manipulate numbers | . Managing Complexity | 1 | 0 | I thought the student met the requirements because they explained how they used lists to amplify the program. | . Procedural Abstraction | 1 | 1 | The studednt did all the dos and didnt do any of the dont’s | . Algorithm Implementation | 1 | 1 | The student used different types of algorithms to enhance their program | . Testing | 1 | 1 | The student passed, because they did diffeerent tests for thweir code in the video and the writeup | . Differences . My score and collegeboard’s score was mostly the same, but we differecd on the score for managing complexity, as I thought that they deserved the point, but I didn’t realize that they failed to explain how the program would have been different without the lists, which was a requirement. . 2: . Reporting Category | My Scoring | College Board Scoring | Comments | . Program Purpose and Function | 0 | 1 | The student didn’t meet the requirements, as they didn’t clearly describe the purpose and function | . Data Abstraction | 1 | 1 | The student had code explaining the acess and use data | . Managing Complexity | 0 | 1 | The student didn’t meet the requirement as the explanation was vague. | . Procedural Abstraction | 1 | 1 | The student used functions int he program | . Algorithm Implementation | 1 | 1 | The student used different types of algorithms | . Testing | 1 | 1 | The student had different calls for testing | . Differences . I had 2 discrepencies, both of which I was grading harder on. It shows that I overestimated the difficulty. I think that I was grading in an english as opposed to CS way . Criteria . 6 criteria for create performance. . Program Purpose and Function | Data Abstraction | Managing Complexity | Procedural Abstraction | Algorithm Implementation | Testing | . Ideas: . Some kind of database | A collection website for card collectors | Fantasy online | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/cptgrade/",
            "relUrl": "/cptgrade/",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Homework 3.17 - 3.18",
            "content": "3.17 Algorithmic Efficiency . Vocabulary . Problem: a general description of a task that can or cannot be solved algorithmically Decision Problem: A problem with a yes or no answer | Organization Problem: a problem with a goal of finding the best answer | . | Instance: a problem with a specific input | Efficiency: amount of computing needed to solve a problem Polynomial Efficiency (Good): more work takes a proportional amount of time (1 job is +2 time) | Exponential Efficiency (Bad): more work takes an exponential amount more time (1 job is 2x time) | . | Heuristic Approach: When optimal solutions are inefficient, look for a possibly optimal solution that is more efficient | Decidable Problem: A decision problem that has a clear solution that will always make a correct output | Undecidable Problem: A decision problem with no solution that is not gaurenteed to produce the correct output | . Notes . Typically, it is good if something can be achieved in polynomial time, because it meand that if one operation takes one second, x operations take x seconds | on the other hand exponential efficiency would mean that each operation takes more time than the previous, like a program that would calculate a factorial | Polynomial efficiency can nave varying levels, like n^2, n^3, n^4, and so on | Exponential efficiency is linke 2^x, 3^x, or 4^x | A heuristic approach is to sacrifice a 100% guarantee of a correct answer to save on time and complexity heuristic approaches can be helpful in cases where a 100% correct solution isn&#39;t necessary | . | . Challenge . Try and fix this ineficcient code! Only change the code between the two commented lines. Fully programmed solution will improve your grade, at a minimum show that you tried. . import time numlist = [1,3,5,7,9,11,13,15,17,19] valuelist = [0,3,6,9,12,15,18,21] def isvalue(value,array): min = 0 max = len(array)-1 if value &lt; array[min] or value &gt; array[max]: return False while min &lt; max: mid = (min+max)//2 if array[mid] &gt; value: max = mid elif array[mid] &lt; value: min = mid elif array[mid] == value: return True if max == min+1: return False starttime = time.time() for i in range(100000): for i in range(len(valuelist)): x = isvalue(valuelist[i],numlist) endtime = time.time() print(endtime-starttime,&#39;seconds&#39;) . 1.1352005004882812 seconds . 3.18 Undecidable Problems . Notes . Computers can&#39;t do everything | certain problems, such as the halting problem, cause them to get stuck | to solve an undecidable problem, we can use a heuristic approach | Undecidable problems occur in everyday life, showing certain machines just cant be made. | . Homework! . Make an algorithm that finds the fastest route that hits every location once starting and ending at Del Norte. Make sure to show your thinking. If you are strugling, try using a huristic approach. Remember, what matters more than having perfectly functioning code is that you tried your hardest. . dataset = { &#39;Del Norte&#39;:{ &#39;Westview&#39;:15, &#39;MtCarmel&#39;:20, &#39;Poway&#39;:35, &#39;RanchoBernardo&#39;:50 }, &#39;Westview&#39;:{ &#39;Del Norte&#39;:15, &#39;MtCarmel&#39;:35, &#39;Poway&#39;:25, &#39;RanchoBernardo&#39;: 45 }, &#39;MtCarmel&#39;:{ &#39;Westview&#39;:35, &#39;Del Norte&#39;:20, &#39;Poway&#39;:40, &#39;RanchoBernardo&#39;:30 }, &#39;Poway&#39;:{ &#39;Westview&#39;:25, &#39;MtCarmel&#39;:40, &#39;Del Norte&#39;:35, &#39;RanchoBernardo&#39;:15 }, &#39;RanchoBernardo&#39;:{ &#39;Westview&#39;:45, &#39;MtCarmel&#39;:30, &#39;Poway&#39;:15, &#39;Del Norte&#39;:50 } } . start = &#39;Del Norte&#39; schools = {&#39;Del Norte&#39;:0,&#39;Westview&#39;:1,&#39;MtCarmel&#39;:2,&#39;Poway&#39;:3,&#39;RanchoBernardo&#39;:4} order = [[&#39;Del Norte&#39;,0,[False,False,False,False,False],[&quot;Del Norte&quot;]]] bestdist = 100000000000000 bestlist = [] while len(order) &gt; 0: curr = order.pop() curr[2][schools[curr[0]]] = True if curr[2] == [True,True,True,True,True]: if bestdist &gt; curr[1]+dataset[curr[0]][&#39;Del Norte&#39;]: bestdist = curr[1]+dataset[curr[0]][&#39;Del Norte&#39;] bestlist = curr[3] continue for i in dataset[curr[0]].keys(): if curr[2][schools[i]] == False: newlist = [] for j in curr[2]: newlist.append(j) newls = [] for j in curr[3]: newls.append(j) newls.append(i) newcurr = [i,curr[1]+dataset[curr[0]][i],newlist,newls] order.append(newcurr) print(&quot;The shortest route from Del Norte stopping at each city and returning is &quot; + str(bestdist)) print(&quot;The cities on the route in order are:&quot;) for i in bestlist: print(i) print(&quot;Del Norte&quot;) . The shortest route from Del Norte stopping at each city and returning is 105 The cities on the route in order are: Del Norte MtCarmel RanchoBernardo Poway Westview Del Norte . Grading: . Challenge Homework . .15 pts for attempt | .65 for attempt | . .20 pts for complete | .70 for complete | . .25 pts for above and beyond | .75 pts for above and beyond | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/homework1718",
            "relUrl": "/homework1718",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Unit 3 Lesson 16, Student Copy",
            "content": "import random lowest = int(input(&quot;Enter what you want the smallest number to be&quot;)) highest = int(input(&quot;Enter what you want the greatest number to be&quot;)) x = random.randint(lowest,highest) print(x) . 27 . def mycloset(): myclothes = [&quot;red shoes&quot;, &quot;green pants&quot;, &quot;tie&quot;, &quot;belt&quot;] newclothes = [&quot;nerd shirt&quot;, &quot;hawaian shorts&quot;, &quot;jacket&quot;,&quot;socks&quot;] choice = input(&quot;what would you like to do?&quot;) if choice == &quot;add&quot;: myclothes.append(random.choice(newclothes)) else: myclothes.remove(random.choice(myclothes)) print(myclothes) mycloset() . [&#39;red shoes&#39;, &#39;green pants&#39;, &#39;tie&#39;, &#39;belt&#39;, &#39;nerd shirt&#39;] . def coinflip(): #def function randomflip = random.randint(0, 2) #picks either 0 or 1 randomly (50/50 chance of either) if randomflip &lt;= 1: #assigning 0 to be heads--&gt; if 0 is chosen then it will print, &quot;Heads&quot; print(&quot;Heads&quot;) else: if randomflip == 2: #assigning 1 to be tails--&gt; if 1 is chosen then it will print, &quot;Tails&quot; print(&quot;Tails&quot;) #Tossing the coin 5 times: t1 = coinflip() t2 = coinflip() t3 = coinflip() t4 = coinflip() t5 = coinflip() . Tails Heads Heads Heads Heads . Hack #1 - Class Notes . simulations are computers representing real world ideas | they can accurately represent situations under considerations however, simulations may not be fully accurate, as they contain error | thse errors are called bias | . | simulations can be used in: video games | molecular and chemical models | predicting how machines will work | flight simulator | and more | . | we can use random values to represent real world randomness like weather | Simulations save time and effort and money of building andtesting a real thing | . Hack #2 - Functions Classwork . . Hack #3 - Binary Simulation Problem . import random def randomnum(): # function for generating random int return random.randint(0,255) def converttobin(num): # function for converting decimal to binary ans = &quot;&quot; for i in range(7,-1,-1): if num &gt;= 2**i: num -= 2**i ans += &quot;1&quot; else: ans += &quot;0&quot; return ans def survivors(): # function to assign position survivorstatus = [&quot;Chinmay&quot;, &quot;SHEESH&quot;, &quot;Emu&quot;, &quot;Mr. Life meme&quot; , &quot;VP&quot;, &quot;Andrew Garfield&quot;, &quot;Tom Holland&quot;, &quot;Tobey Maguire&quot;] status = converttobin(randomnum()) for i in range(len(status)): if status[i] == &#39;1&#39;: print(survivorstatus[i]) # replace the names above with your choice of people in the house survivors() . Emu Tom Holland Tobey Maguire . Hack #4 - Thinking through a problem . create your own simulation involving a dice roll | should include randomization and a function for rolling + multiple trials | . def diceroll(): return random.randint(1,6) for i in range(10): print(diceroll()) . 1 1 2 2 6 3 4 1 1 1 . Hack 5 - Applying your knowledge to situation based problems . Using the questions bank below, create a quiz that presents the user a random question and calculates the user&#39;s score. You can use the template below or make your own. Making your own using a loop can give you extra points. . A researcher gathers data about the effect of Advanced Placement®︎ classes on students&#39; success in college and career, and develops a simulation to show how a sequence of AP classes affect a hypothetical student&#39;s pathway.Several school administrators are concerned that the simulation contains bias favoring high-income students, however. answer options: The simulation is an abstraction and therefore cannot contain any bias | The simulation may accidentally contain bias due to the exclusion of details. ANSWER | If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation. | The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output. | | . | Jack is trying to plan his financial future using an online tool. The tool starts off by asking him to input details about his current finances and career. It then lets him choose different future scenarios, such as having children. For each scenario chosen, the tool does some calculations and outputs his projected savings at the ages of 35, 45, and 55.Would that be considered a simulation and why? answer options No, it&#39;s not a simulation because it does not include a visualization of the results. | No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment. | Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output. ANSWER | Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences. | | . | Sylvia is an industrial engineer working for a sporting goods company. She is developing a baseball bat that can hit balls with higher accuracy and asks their software engineering team to develop a simulation to verify the design.Which of the following details is most important to include in this simulation? answer options Realistic sound effects based on the material of the baseball bat and the velocity of the hit | A depiction of an audience in the stands with lifelike behavior in response to hit accuracy | Accurate accounting for the effects of wind conditions on the movement of the ball ANSWER | A baseball field that is textured to differentiate between the grass and the dirt | | . | Ashlynn is an industrial engineer who is trying to design a safer parachute. She creates a computer simulation of the parachute opening at different heights and in different environmental conditions.What are advantages of running the simulation versus an actual experiment? answer options The simulation will not contain any bias that favors one body type over another, while an experiment will be biased. | The simulation can be run more safely than an actual experiment ANSWER | The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design. | The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment. ANSWER | | this question has 2 correct answers | . | YOUR OWN QUESTION; can be situational, pseudo code based, or vocab/concept based | YOUR OWN QUESTION; can be situational, pseudo code based, or vocab/concept based | questions = [&quot;A researcher gathers data about the effect of Advanced Placement®︎ classes on students&#39; success in college and career, and develops a simulation to show how a sequence of AP classes affect a hypothetical student&#39;s pathway.Several school administrators are concerned that the simulation contains bias favoring high-income students, however.&quot;, &quot;Jack is trying to plan his financial future using an online tool. The tool starts off by asking him to input details about his current finances and career. It then lets him choose different future scenarios, such as having children. For each scenario chosen, the tool does some calculations and outputs his projected savings at the ages of 35, 45, and 55.Would that be considered a simulation and why?&quot;, &quot;Sylvia is an industrial engineer working for a sporting goods company. She is developing a baseball bat that can hit balls with higher accuracy and asks their software engineering team to develop a simulation to verify the design.Which of the following details is most important to include in this simulation?&quot;, &quot;Ashlynn is an industrial engineer who is trying to design a safer parachute. She creates a computer simulation of the parachute opening at different heights and in different environmental conditions.What are advantages of running the simulation versus an actual experiment?&quot;, &quot;What is a simulation that includes variables that would be different in real life called?&quot;, &quot;What is an advantage of using a simultion as opposed to building and testing something in real life?&quot;] answers = [&quot;2&quot;,&quot;3&quot;,&quot;3&quot;,&quot;24&quot;,&quot;1&quot;,&quot;4&quot;] order = [0,1,2,3,4,5] options = [&quot;1. The simulation is an abstraction and therefore cannot contain any bias n2. The simulation may accidentally contain bias due to the exclusion of details. n3. If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation. n4. The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&quot;, &quot;1. No, it&#39;s not a simulation because it does not include a visualization of the results. n2. No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment. n3. Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output. n4. Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&quot;, &quot;1. Realistic sound effects based on the material of the baseball bat and the velocity of the hit n2. A depiction of an audience in the stands with lifelike behavior in response to hit accuracy n3. Accurate accounting for the effects of wind conditions on the movement of the ball n4. A baseball field that is textured to differentiate between the grass and the dirt&quot;, &quot;1. The simulation will not contain any bias that favors one body type over another, while an experiment will be biased. n2. The simulation can be run more safely than an actual experiment n3. The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design. n4. The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&quot;, &quot;1. Bias n2. Abstraction n3. Experimentation nAlgorithm&quot;, &quot;1. It&#39;s more fun n2. It&#39;s the trend n3. Computers can simulate with 100 percent accuracy no matter the conditions n4. It can produce more reliable reliable results, and save time and money&quot;] random.shuffle(order) correct = 0 for i in order: print(questions[i]) print(options[i]) print(&quot;&quot;) ans = input(&quot;which option do you choose?&quot;) if ans in answers[i]: correct += 1 print(&quot;good job!&quot;) else: print(&quot;you got it wrong&quot;) print(&quot;&quot;) print(&quot;Good Job! You scored &quot; + str(correct) +&quot;/6! That is a &quot; + str(correct/6) + &quot;%&quot;) . A researcher gathers data about the effect of Advanced Placement®︎ classes on students&#39; success in college and career, and develops a simulation to show how a sequence of AP classes affect a hypothetical student&#39;s pathway.Several school administrators are concerned that the simulation contains bias favoring high-income students, however. 1. The simulation is an abstraction and therefore cannot contain any bias 2. The simulation may accidentally contain bias due to the exclusion of details. 3. If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation. 4. The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output. you got it wrong What is an advantage of using a simultion as opposed to building and testing something in real life? 1. It&#39;s more fun 2. It&#39;s the trend 3. Computers can simulate with 100 percent accuracy no matter the conditions 4. It can produce more reliable reliable results, and save time and money you got it wrong Ashlynn is an industrial engineer who is trying to design a safer parachute. She creates a computer simulation of the parachute opening at different heights and in different environmental conditions.What are advantages of running the simulation versus an actual experiment? 1. The simulation will not contain any bias that favors one body type over another, while an experiment will be biased. 2. The simulation can be run more safely than an actual experiment 3. The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design. 4. The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment. you got it wrong Jack is trying to plan his financial future using an online tool. The tool starts off by asking him to input details about his current finances and career. It then lets him choose different future scenarios, such as having children. For each scenario chosen, the tool does some calculations and outputs his projected savings at the ages of 35, 45, and 55.Would that be considered a simulation and why? 1. No, it&#39;s not a simulation because it does not include a visualization of the results. 2. No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment. 3. Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output. 4. Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences. you got it wrong Sylvia is an industrial engineer working for a sporting goods company. She is developing a baseball bat that can hit balls with higher accuracy and asks their software engineering team to develop a simulation to verify the design.Which of the following details is most important to include in this simulation? 1. Realistic sound effects based on the material of the baseball bat and the velocity of the hit 2. A depiction of an audience in the stands with lifelike behavior in response to hit accuracy 3. Accurate accounting for the effects of wind conditions on the movement of the ball 4. A baseball field that is textured to differentiate between the grass and the dirt you got it wrong What is a simulation that includes variables that would be different in real life called? 1. Bias 2. Abstraction 3. Experimentation Algorithm good job! Good Job! You scored 1/6! That is a 0.16666666666666666% . Hack #6 / Challenge - Taking real life problems and implementing them into code . Create your own simulation based on your experiences/knowledge! Be creative! Think about instances in your own life, science, puzzles that can be made into simulations . Some ideas to get your brain running: A simulation that breeds two plants and tells you phenotypes of offspring, an adventure simulation... . print(&quot;Welcome to Math Class!&quot;) points = 0 totpoints = 0 percent = 0 quizzes = [25,25,25,25] tests = [100,200,300,300] for i in range(4): print(&quot;You have a &quot;+str(percent*100)+&quot; percent in the class!&quot;) studytime = int(input(&quot;How much will you study for quiz &quot; + str(i+1) + &quot;? Enter a number of hours between 0 and 5&quot;)) score = 50+(5*studytime)+random.randint(0,25) totpoints += quizzes[i] points += ((score/100)*quizzes[i]) percent = points/totpoints print(&quot;You got a &quot;+str(score)+&quot; percent on quiz&quot; + str(i+1) + &quot;!&quot;) print(&quot;&quot;) print(&quot;You have a &quot;+str(percent*100)+&quot; percent in the class!&quot;) studytime = int(input(&quot;How much will you study for test &quot; + str(i+1) + &quot;? Enter a number of hours between 0 and 5&quot;)) print(&quot;You studied for &quot;+str(studytime)+&quot; hours!&quot;) score = 50+(5*studytime)+random.randint(0,25) totpoints += tests[i] points += ((score/100)*tests[i]) percent = points/totpoints print(&quot;You got a &quot;+str(score)+&quot; percent on test&quot; + str(i+1) + &quot;!&quot;) print(&quot;&quot;) grade = &quot;F&quot; if percent &gt;= 0.6: grade = &quot;D&quot; if percent &gt;= 0.7: grade = &quot;C&quot; if percent &gt;= 0.8: grade = &quot;B&quot; if percent &gt;= 0.9: grade = &quot;A&quot; print(&quot;Good job! Your final grade in the class is a(n) &quot;+str(percent*100)+&quot;! You got a(n) &quot;+grade+&quot; in the class!&quot;) . Welcome to Math Class! You have a 0 percent in the class! You got a 64 percent on quiz1! You have a 64.0 percent in the class! You studied for 2 hours! You got a 61 percent on test1! You have a 61.6 percent in the class! You got a 72 percent on quiz2! You have a 63.33333333333333 percent in the class! You studied for 5 hours! You got a 77 percent on test2! You have a 71.14285714285714 percent in the class! You got a 84 percent on quiz3! You have a 72.0 percent in the class! You studied for 4 hours! You got a 70 percent on test3! You have a 71.11111111111111 percent in the class! You got a 67 percent on quiz4! You have a 70.96428571428571 percent in the class! You studied for 5 hours! You got a 97 percent on test4! Good job! Your final grade in the class is a(n) 78.77499999999999! You got a(n) C in the class! .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/2022/12/12/hw.html",
            "relUrl": "/2022/12/12/hw.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "3911hw",
            "content": ".",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/2022/12/09/3911HW.html",
            "relUrl": "/2022/12/09/3911HW.html",
            "date": " • Dec 9, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "3.5-7",
            "content": "print(&quot;True:&quot;,4 == 4) print(&quot;True:&quot;,1 &gt; 0) print(&quot;False:&quot;,7 &lt;= 3) print(&quot;True:&quot;,5 != 6) print(&quot;False:&quot;,7 == 8) print(&quot;True:&quot;,3 == 3) print(&#39;&#39;) # Same as above, but now for other values other than int print(&#39;True:&#39;,&quot;as&quot; ==&quot;as&quot;) print(&quot;False:&quot;,True == False) print(&quot;False:&quot;,[2,3,1] &lt; [2,3,1]) print(&quot;True:&quot;,&#39;af&#39; &lt;=&#39;bc&#39;) print(&quot;False:&quot;,&#39;ce&#39; &gt; &#39;cf&#39;) print(&quot;True:&quot;,[1,&#39;b&#39;] &gt; [1,&#39;a&#39;]) print(&#39;&#39;) . True: True True: True False: False True: True False: False True: True True: True False: False False: False True: True False: False True: True . print(&quot;True:&quot;, True or False) print(&quot;False:&quot;, not True) print(&quot;True:&quot;, True and True) print(&quot;False:&quot;, not True) print(&quot;False:&quot;, True and False) print(&quot;True:&quot;, not False) . True: True False: False True: True False: False False: False True: True . Age = 30; if (Age == 30): print(&quot;your old&quot;) else: print(&quot;you should retire&quot;); if (Age &gt; 50): print(&quot;You have a beard&quot;); . your old . number = int(input(&quot;What number would you like to convert? Please enter an Integer&quot;)) pow = 0 while 2**pow &lt;= number: pow += 1 answer = &quot;&quot; for i in range(pow-1,-1,-1): if number &gt;= 2**i: answer += &quot;1&quot; number -= 2**i else: answer += &quot;0&quot; print(&quot;The binary form of the decimal number &quot; + str(number) + &quot; is &quot; + answer) bintooct = {&quot;000&quot;:&quot;0&quot;,&quot;001&quot;:&quot;1&quot;,&quot;010&quot;:&quot;2&quot;,&quot;011&quot;:&quot;3&quot;,&quot;100&quot;:&quot;4&quot;,&quot;101&quot;:&quot;5&quot;,&quot;110&quot;:&quot;6&quot;,&quot;111&quot;:&quot;7&quot;} while len(answer)%3 != 0: answer = &quot;0&quot;+answer oct = &quot;&quot; for i in range(0,len(answer)-2,3): oct += bintooct[answer[i:i+3]] print(&quot;The octal form of the decimal number &quot; + str(number) + &quot; is &quot; + oct) . The binary form of the decimal number 0 is 1010 The octal form of the decimal number 0 is 12 . Notes: . A boolean is an expression that can be true or false | Boolean operators include: Not: !,changes true to false and false to true | And: and, returns true if two boolean expressions are true | Or: or, returns true if one of two boolean expressions are true | Xor: returns true if two boolean expressions are different(both trye or both false) | &lt;,&gt;, &gt;=, &lt;= : Mathematical operators which return true if a number or string(alphabetically) is that operator relative to the other one | . | Comparison operators can be used with arrays two, looking at the first index, then the second, and so on | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/bool",
            "relUrl": "/bool",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Searching Introduction",
            "content": "What is searching? . In certain computer programs and applications, one might find the need to locate and retrieve a data value and/or it&#39;s index. Searching algorithms could be done in either intervals or sequences, and certain algorithms could be more efficient than others, with benefits and drawbacks to each. . Searching Notes: . Two main kinds fo searching: Sequential search: takes the length of the list operations to execute | Iteratively going through each element of a list | can use for loop | while loop | recursive function | Takes more time, as it must look through every element of the list | can be used in an unsorted order | . | Binary Search: ONLY can be used with sorted arrays | takes log base 2 times the length of list operations(less than sequential search) | can be done with a while loop or a recursive function | with each call, it uses a min and max value to throw out half of the array each time | it uses a mid value with indexes to accomplish this. | . | . | . The Naive Approach . The most intuitively obvious solution to the searching problem is to sequentialy check each successful value in the data structure until either a matching value is found, or the entire structure has been transversed. This thought process could be explained graphically in this example . def sequentialSearch(arr, target): N = len(arr) # Declare N as length of array for i in range(N): # Iterate over the list if arr[i] == target: # Check for match return i # Match found, return index and end function call return -1 # Element not found . Sequential Search - Larger Inputs . Although for selection sort is seemingly fast for smaller inputs, it is clear that it cannot keep up with increasing input sizes. Because sequential search checks every value of the given array, the algorithm&#39;s overall runtime increases &quot;linearly&quot; with the input size. . i.e. Pretend that one check takes one second, and that we are searching for the last element in an array. If the array length is 4, it would take 4 seconds to find the last element, whereas if the array length is 86400 indices long, it would take a whole day to find the element. . Hence, although selection sort is known for its simplicity, it is unfeasible for large inputs . Below, we have created three sorted lists of length 100,1000000,100000000. . import time arr1 = [i for i in range(100)] arr2 = [i for i in range(1000000)] arr3 = [i for i in range(100000000)] . To analyze the sequential search algorithm, we will check for the worst case scenario, where runtime is maximized. This is because when measuring the efficiency of our algorithm, we want to be able to guarantee an upper limit or set amount of time for our program to finish running. To do this, we will attempt to search for the last element in the array . print(&quot;length of list: &quot;, len(arr1)) s = time.time() print(&quot;Index: &quot;, sequentialSearch(arr1,99)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100 Index: 99 Execution time: 0.10061264038085938 ms . print(&quot;length of list: &quot;, len(arr2)) s = time.time() print(&quot;Index: &quot;, sequentialSearch(arr2,999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 1000000 Index: 999999 Execution time: 58.67457389831543 ms . print(&quot;length of list: &quot;, len(arr3)) s = time.time() print(&quot;Index: &quot;, sequentialSearch(arr3,99999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100000000 Index: 99999999 Execution time: 7595.456600189209 ms . As you can see, as the input list grows larger and larger, the overall runtime of the program increases linearly as well, resulting in a lower scalability for the sequential search algorithm. . Binary Search . Binary search is an efficient way to iterate through a SORTED list to find a requested value. This is done through checking the middle value of a list and checking if the requested value is greater than or less than the middle value. You can start to see why the requested list must be sorted. If the list is not sorted, this logic is flawed, and the binary search algorithm will no longer work. . Unlike the sequential search method, binary search doesn&#39;t check for each successive element until a match is found. In every iteration the algorithm is making a binary decision; if the selected element is larger or smaller than the target. . How exactly does this work? Lets look at these amazing ms paint drawings: . i was too lazy to make a third so ur gonna have to live with 2 :) . This algorithm is extremely efficient as the maximum number of cycles in binary search is equal to log base 2 of the closest, next power of two, to length of list. . If the array is 8 items long, the maximum possible cycles would be 3 (log base 2 of 8 is 3) . If the array is 7 items long, the maximum possible cycles would STILL be 3 as the closest power of 2 to 7 is 8. . If the array is 9 items long, the maximum possible cycles INCREASES to 4, as the closest, next power of two, is 16. . def binarySearch(array, target): # Parameters: array is the given array and target is what we are looking for low = 0 # the starting lower bound high = len(array)-1 # the starting upper bound while high &gt;= low: # we will keep running until we run out of possible subarrays... mid = (high + low) // 2 # define the middle of the list to be the item at the index of the average of the lower and upper bound if array[mid] == target: # if item is in the middle of the list... we found what we are looking for! return mid # therefore, we return the index of where we found the item. elif array[mid] &gt; target: # if item is less than the middle of the list, this must mean that the item is on the lower half of the list high = mid-1 # therefore, we set the upper bound of the search to be the last item of the lower half else: # if item is neither less than or equal to the middle of the list, this must mean that the item is on the upper half of the list low = mid+1 # therefore, we set the lower bound of the search to be the first item of the upper half # if nothing is returned by the time the while loop ends, that means item MUST be missing from list return False # therefore we tell the user that the requested item was not found . Likewise, we can also take a recursive approach to this problem, note the similarities . def BinarySearchRecursion(arr, target, lo, hi): if lo &gt; hi: return False mid = (lo+hi)//2 if arr[mid] == target: return mid elif arr[mid] &gt; target: return BinarySearchRecursion(arr, target, lo, mid-1) elif arr[mid] &lt; target: return BinarySearchRecursion(arr, target, mid+1, hi) . Now, let&#39;s compare the runtime with the same lists we tried with the sequential search algorithm. . print(&quot;length of list: &quot;, len(arr1)) s = time.time() print(&quot;Index: &quot;, binarySearch(arr1,99)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100 Index: 99 Execution time: 0.1709461212158203 ms . print(&quot;length of list: &quot;, len(arr2)) s = time.time() print(&quot;Index: &quot;, binarySearch(arr2,999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 1000000 Index: 999999 Execution time: 0.1220703125 ms . print(&quot;length of list: &quot;, len(arr3)) s = time.time() print(&quot;Index: &quot;, binarySearch(arr3,99999999)) e = time.time() print(&#39;Execution time:&#39;, (e-s)*1000, &#39;ms&#39;) . length of list: 100000000 Index: 99999999 Execution time: 0.2090930938720703 ms . arr4 = [1,4,5,8,10,13,145,1938] print(&quot;Index: &quot;, binarySearch(arr4,17)) . Index: False . Challenges and Homework . You have one homework problem. . Yes just one. . Don&#39;t get excited though. . Problem: Given a specific integer N, return the square root of N (R) if N is a perfect square, otherwise, return the square root of N rounded down to the nearest integer . Input: N (Integer) . Output: R (Integer) . Constraints: Do not use any built-in math operations such as sqrt(x) or x**(0.5), Try complete the problem in logarithmic time. . Hint 1: Maybe you can use Binary Search to try and reduce the number of checks you have to perform? . Hint 2: Is there a mathematical pattern amongst numbers and their square roots that could help you reduce the number of searches or iterations you must execute? Is there some value or rule you can set before applying binary search to narrow the range of possible values? . Run the very last code segment below to load test cases and submission function . def sqrt(N): max = N min = 0 mid = 0 while True: mid = (min+max)//2 if mid**2 &lt; N: min = mid+1 elif mid**2 &gt; N: max = mid else: return mid . from math import sqrt as sq test_cases = [0,1,4,85248289,22297284,18939904,91107025,69122596,9721924,37810201,1893294144,8722812816,644398225] answers = [int(sq(x)) for x in test_cases] def checkValid(): for i in range(len(test_cases)): if sqrt(test_cases[i]) == answers[i]: print(&quot;Check number {} passed&quot;.format(i+1)) else: print(&quot;Check number {} failed&quot;.format(i+1)) checkValid() . Check number 1 passed Check number 2 passed Check number 3 passed Check number 4 passed Check number 5 passed Check number 6 passed Check number 7 passed Check number 8 passed Check number 9 passed Check number 10 passed Check number 11 passed Check number 12 passed Check number 13 passed .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/2022/11/29/searching-introduction.html",
            "relUrl": "/2022/11/29/searching-introduction.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Developing Algorithms (JavaScript)",
            "content": "Review . if-else statements . Syntax: . if (condition) { } else if (condition 2) { } else { } . for loops . for (let i = number; i &lt; number; i++) { // code } . Conditionals vs Booleans . Conditionals and booleans can be equivalent. . For example, let&#39;s say there are two booleans: rainy and sunny. . Let&#39;s look at the following code: . sunny = true; rainy = false; . false . if (sunny) { umbrella = false; } else if (rainy) { umbrella = true; } else { umbrella = false; } console.log(umbrella); . false . The code above is the same as below: . umbrella = !sunny &amp;&amp; rainy; console.log(umbrella); . false . To determine if two conditionals and booleans are the same, you can substitute the four possibilities that the two booleans (sunny and rainy) can be (listed below) into the conditional and boolean and see if both cases match: . sunny = true, rainy = true . sunny = true, rainy = false . sunny = false, rainy = true . sunny = false, rainy = false . Challenge . Using JavaScript, create an algorithm that takes in an IP address and a subnet mask and computes the network address. . Overview . As we&#39;ve seen in Unit 4.1, an IP address is a 32 bit number that uniquely identifies each device. (See this for a recap). Something extra is that an IP address also comes with a subnet mask. A subnet mask is also a 32 bit number that identifies what network an IP address in in through a process that uses the bitwise AND. . In ANDing: . 0 + 0 = 0 . 0 + 1 = 0 . 1 + 0 = 0 . 1 + 1 = 1 . The following are the steps to determine the network that an IP address is in given the subnet mask: . Example: IP address: 192.168.0.1 . Subnet mask: 255.255.255.0 . Convert the IP address into binary: 192.168.0.1 -&gt; 11000000.10101000.00000000.00000001 | Convert the subnet mask into binary: 255.255.255.0 -&gt; 11111111.11111111.11111111.00000000 | Do a bitwise AND operation on the binary IP address and subnet mask: | 11000000.10101000.00000000.00000001 +11111111.11111111.11111111.00000000 =11000000.10101000.00000000.00000000 . Convert the result back to decimal: 11000000.10101000.00000000.00000000 -&gt; 192.168.0.0 | The network address is 192.168.0.0 . // Wasn&#39;t able to finish, here is the start. function Address(ipAddress, subnetMask) { var binaryIpAddress = Binary(ipAddress); var binarySubnetMask = Binary(subnetMask); var networkAddressBinary = binaryIpAddress &amp; binarySubnetMask; var networkAddress = Decimal(networkAddressBinary); return networkAddress; } function Decimal(binary) { var binaryOctets = binary.match(/.{1,8}/g); var octets = binaryOctets.map(function(binaryOctet) { return parseInt(binaryOctet, 2); }); return octets.join(&quot;.&quot;); } var ipAddress = &quot;192.168.0.1&quot;; var subnetMask = &quot;255.255.255.0&quot;; var networkAddress = Address(ipAddress, subnetMask); console.log(networkAddress); . evalmachine.&lt;anonymous&gt;:21 var binaryOctets = binary.match(/.{1,8}/g); ^ TypeError: binary.match is not a function at Decimal (evalmachine.&lt;anonymous&gt;:21:31) at computeNetworkAddress (evalmachine.&lt;anonymous&gt;:6:26) at evalmachine.&lt;anonymous&gt;:33:24 at ContextifyScript.Script.runInThisContext (vm.js:25:33) at Object.runInThisContext (vm.js:97:38) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at emitTwo (events.js:106:13) at process.emit (events.js:191:7) .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/2022/11/29/developing-algorithms-js.html",
            "relUrl": "/2022/11/29/developing-algorithms-js.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Developing Algorithms",
            "content": "Algorithms can be written in different ways and still accomplish the same tasks. Algorithms that look similar often yield differnet outputs. To solve the same problem, many different algorithms can be used. . Therefore, algorithms are very important for programmers, and today we&#39;re going to explore how to determine the outcome of algorithms, how to deteremine the output of similar algorithms, how to edit existing algorithms, and how to develop our own algorithms. . Notes: . An algorithm is like a series of very specific instructions that a computer can follow to execute a certain task | many algorithms are math and computationally involved | an algorithm can be modeled with pseudoode | all algorithms involve some sort of problems, and there are usually many algorithms with accomplist the same tasks | Debugging is used if the algorithm doesn&#39;t work as planned | . Determine the outcome of algorithms . Consider the following algorithm. . def mystery(num, num2): if (num % num2 == 0): print(&quot;True&quot;) else: print(&quot;False&quot;) mystery(20, 4) . True . What does the algorithm do? Please explain in words. The above algorithm shows a function which takes in 2 numbers. If the remainder of the first number divided by the second number is 0, or in other words, if the first number is divisible by the second, True is printed. If not, False is printed | What if I put in 30 as num and 4 as num2. What would be the output? False, as 30 isn&#39;t divisible by 4 | Determine the outcome of similar algorithms . What is the output of this algorithm? it is too hot outside . temp = 95 if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) else: if (temp &gt;= 65): print(&quot;I will go outside&quot;) else: print(&quot;it is too cold outside&quot;) . it is too hot outside . What is the output of this algorithm? it looks similar but the output is different! . it is too hot outside | i will go outside | . temp = 95 if (temp &gt;= 90): print(&quot;it is too hot outside&quot;) else: if (temp &gt;= 65): print(&quot;i will go outside&quot;) if (temp &lt; 65): print(&quot;it is too cold outside&quot;) . it is too hot outside . Editing Algorithms . Task: Please edit the algorithm above to have it yield the same results as the previous algorithm! (no matter what temp you put in) . Developing Algorithms . To develop algorithms, we first need to understand what the question is asking. Then, think about how you would approach it as a human and then try to find what pattern you went through to arrive at the answer. Apply this to code, and there you have it! An algorithm! . Let&#39;s say you wanted to sum up the first five integers. How would you do this in real life? Your thought process would probably be: . The sum of the first integer is 1. | Then, increase that integer by 1. I now add 2 to my existing sum (1). My new sum is 3. | Repeat until I add 5 to my sum. The resulting sum is 15. | . Now let&#39;s translate this into code. . sum = 0 # start with a sum of 0 for i in range (1, 6): # you will repeat the process five times for integers 1-5 sum = sum + i # add the number to your sum print(sum) # print the result . 15 . Task: Write an algorithm in python that sums up the first 5 odd integers. You can use the following code as a starter. . sum = 0 counter = 1 for i in range (0, 5): sum = sum + counter counter = counter + 2 print(sum) . 25 . Homework . Create an algorithm that will start with any positive integer n and display the full sequence of numbers that result from the Collatz Conjecture. The COllatz Conjecture is as follows: . start with any positive integer | if the number is even, divide by 2 | if the number is odd, multiply by 3 and add 1 | repeat steps 2 and 3 until you reach 1 | Example: if the starting number was 6, the output would be 6, 3, 10, 5, 16, 8, 4, 2, 1 . def collatz(N): print(N) while N != 1: if N//2 == N/2: N //= 2 else: N *= 3 N += 1 print(N) collatz(6) . 6 3 10 5 16 8 4 2 1 .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/2022/11/29/Developing-Algorithms.html",
            "relUrl": "/2022/11/29/Developing-Algorithms.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "3 point one and two",
            "content": "3.1 and 3.2 Notes . A variable is a place to stora a type of data int | string | boolean | . | To assign a variable, we use the &quot;=&quot; operator | Varables can be casted to one another | strings are wihting &quot;quotes&quot; | booleans are always true or false | lists are acessed by index | floats are numbers with decimal points | name = value | Data abstraction manages complexity in programs | lists make it easier to acess multiple variables | . data = [2, 101, 4, 105, 308, 103, 5, 107, 100, 306, 106, 102, 108] # list of the different numerical values min_valid = 100 # minimum value max_valid = 200 # maximum value for i in range(len(data)): if data[i] &lt; min_valid or data[i] &gt; max_valid: print(i, data[i]) . 0 2 2 4 4 308 6 5 9 306 . albums = [ (&quot;Welcome to my Nightmare&quot;, &quot;Alice Cooper&quot;, 1975, # First album list [ (1, &quot;Welcome to my Nightmare&quot;), (2, &quot;Devil&#39;s Food&quot;), (3, &quot;The Black Widow&quot;), (4, &quot;Some Folks&quot;), (5, &quot;Only Women Bleed&quot;), ] ), (&quot;Bad Company&quot;, &quot;Bad Company&quot;, 1974, # Second album list [ (1, &quot;Can&#39;t Get Enough&quot;), (2, &quot;Rock Steady&quot;), (3, &quot;Ready for Love&quot;), (4, &quot;Don&#39;t Let Me Down&quot;), (5, &quot;Bad Company&quot;), (6, &quot;The Way I Choose&quot;), (7, &quot;Movin&#39; On&quot;), (8, &quot;Seagull&quot;), ] ), (&quot;Nightflight&quot;, &quot;Budgie&quot;, 1981, [ (1, &quot;I Turned to Stone&quot;), (2, &quot;Keeping a Rendezvous&quot;), (3, &quot;Reaper of the Glory&quot;), (4, &quot;She Used Me Up&quot;), ] ), (&quot;More Mayhem&quot;, &quot;Imelda May&quot;, 2011, [ (1, &quot;Pulling the Rug&quot;), (2, &quot;Psycho&quot;), (3, &quot;Mayhem&quot;), (4, &quot;Kentish Town Waltz&quot;), ] ), ] i = int(input(&quot;which number album?&quot;)) j = int(input(&quot;which number song?&quot;)) print(albums[i-1][3][j-1][1]) . Welcome to my Nightmare .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/variables",
            "relUrl": "/variables",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Lists and Iteration Homework",
            "content": "Overview and Notes: 3.10 - Lists . Make sure you complete the challenge in the challenges section while we present the lesson! | . Add your OWN Notes for 3.10 here: . A list is a container to store many datatypes, such as strings, integersa, and booleans | A list is defined with square brackets and is useful, rather than keeping a lot of variables | There are many functions that you cna use on lists, such as append, insert, and remove | lists are acessed by index. the first index is 0, second is one, and so on | negative indexes acess elements from the back. | . | . Fill out the empty boxes: | Pseudocode Operation | Python Syntax | Description | |:--:|::|::| | aList[i] | aList[i] | Accesses the element of aList at index i | | x ← aList[i] | x = aList[i] | Assigns the element of aList at index i to a variable &#39;x&#39; | | aList[i] ← x | aList[i] = x | Assigns the value of a variable &#39;x&#39; to the element of a List at index i | | aList[i] ← aList[j] | aList[i] = aList[j] | Assigns value of aList[j] to aList[i] | | INSERT(aList, i, value) | aList.insert(i, value) | value is placed at index i in aList. Any element at an index greater than i will shiftone position to the right. | | APPEND(aList, value) | aList.append(value) | Replaces the element at index i with value | | REMOVE(aList, i) | aList.pop(i)ORaList.remove(value) | Removes item at index i and any values at indices greater than i shift to the left. Length of aList decreased by 1. | . Overview and Notes: 3.8 - Iteration . Add your OWN Notes for 3.8 here: . To acess eleemnts of a list in order, one can use iteration | With a for or while loop, you can acess the elements in an array or the indexes of an array in order | This makes printing data and data manipulation easier | saying &quot;for i in list:&quot; iterates through every element in list | &quot;for i in range(len(list))&quot; iterates through every index in list | . Homework Assignment . Instead of us making a quiz for you to take, we would like YOU to make a quiz about the material we reviewed. . We would like you to input questions into a list, and use some sort of iterative system to print the questions, detect an input, and determine if you answered correctly. There should be at least five questions, each with at least three possible answers. . You may use the template below as a framework for this assignment. . import random questions = [(0,&quot;How are elements from arrays acessed?&quot;),(1,&quot;Which data types can be stored in arrays&quot;),(2,&quot;What does the function .append() do?&quot;),(3,&quot;What does negative indexing do?&quot;), (4,&quot;what number does indexing start at?&quot;), (5,&quot;what kind of loop is most used in iteration?&quot;)] options = [&quot;A. [] n B. () n C. {} n D. you cannot acess individual elements&quot;, &quot;A. int n B. String n C. boolean n D. all of the above&quot;, &quot;A. remove an element n B. add an element to the end n C. add an element to the start n D. append does not work with a list&quot;, &quot;A. the same thing as regular indexing n B. gives elements from a sorted list n C. index from the back n D. give a syntax error&quot;, &quot;A. 0 n B. 1 n C. 2 n D. -1&quot;, &quot;A. while n B. for n C. if n D. recursive&quot;] answers = [&quot;A&quot;,&quot;D&quot;,&quot;B&quot;,&quot;C&quot;,&quot;A&quot;,&quot;B&quot;] def questionloop(): score = 0 random.shuffle(questions) for i in questions: answer = input(i[1]+ &quot; &quot; + options[i[0]]) if answercheck(answer, i[0]) == True: print(&quot;correct&quot;) score += 1 else: print(&quot;wrong&quot;) return score #make an iterative function to ask the questions #this can be any loop you want as long as it works! def answercheck(answer, index): if answer == answers[index]: return True return False #make a function to check if the answer was correct or not print(&quot;Your score is &quot; + str(questionloop()) + &quot;/6. Good Job!&quot;) . wrong wrong wrong correct wrong correct Your score is 2/6. Good Job! . Hacks . Here are some ideas of things you can do to make your program even cooler. Doing these will raise your grade if done correctly. . Add more than five questions with more than three answer choices | Randomize the order in which questions/answers are output | At the end, display the user&#39;s score and determine whether or not they passed | . Challenges . Important! You don&#39;t have to complete these challenges completely perfectly, but you will be marked down if you don&#39;t show evidence of at least having tried these challenges in the time we gave during the lesson. . 3.10 Challenge . Follow the instructions in the code comments. . grocery_list = [&#39;apples&#39;, &#39;milk&#39;, &#39;oranges&#39;, &#39;carrots&#39;, &#39;cucumbers&#39;] # Print the fourth item in the list print(grocery_list[3]) # Now, assign the fourth item in the list to a variable, x and then print the variable x = grocery_list[3] print(x) # Add these two items at the end of the list : umbrellas and artichokes grocery_list.append(&#39;umbrellas&#39;) grocery_list.append(&#39;artichokes&#39;) # Insert the item eggs as the third item of the list grocery_list.insert(2,&#39;eggs&#39;) # Remove milk from the list grocery_list.remove(&#39;milk&#39;) # Assign the element at the end of the list to index 2. Print index 2 to check grocery_list[2] = grocery_list[-1] print(grocery_list[2]) # Print the entire list, does it match ours ? print(grocery_list) # Expected output # carrots # carrots # artichokes # [&#39;apples&#39;, &#39;eggs&#39;, &#39;artichokes&#39;, &#39;carrots&#39;, &#39;cucumbers&#39;, &#39;umbrellas&#39;, &#39;artichokes&#39;] . carrots carrots artichokes [&#39;apples&#39;, &#39;eggs&#39;, &#39;artichokes&#39;, &#39;carrots&#39;, &#39;cucumbers&#39;, &#39;umbrellas&#39;, &#39;artichokes&#39;] . binarylist = [ &quot;01001001&quot;, &quot;10101010&quot;, &quot;10010110&quot;, &quot;00110111&quot;, &quot;11101100&quot;, &quot;11010001&quot;, &quot;10000001&quot; ] def binary_convert(binarylist): decimallist = [] for i in binarylist: number = 0 power = 7 for j in i: if j == &quot;1&quot;: number += 2**power power -= 1 decimallist.append(number) for i in decimallist: if i &lt;= 100: print(i) print(decimallist) #use this function to convert every binary value in binarylist to decimal #afterward, get rid of the values that are greater than 100 in decimal #when done, print the results binary_convert(binarylist) . 73 55 [73, 170, 150, 55, 236, 209, 129] .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/homework/",
            "relUrl": "/homework/",
            "date": " • Nov 26, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Big idea 3!",
            "content": "3.3 Expressions(Show video 1 and 3) . Vocab: fill in the blanks . the symbol for exponent is * the symbol for addition is + the symbol for subtraction is - the symbol for multiplication is the symbol for division is / the symbol for modulus is % an algorithm is a set of instructions that can repeatedly produce a set of results with different inputs. . Sequencing Practice: the code below does not follow the intended steps below. change the code so that it does so. . divide value1 by 10(value1 = 5) | multiply 2 from the result of the step 1 | subtract 4 from the result of the step 2 | print the result of step 3 | value1 = 5 value2 = value1 / 10 #step 1 value3 = value2 * 2 #step 2 value4 = value3 - 4 #step 3 print(value4) . -3.0 . Selection/Iteration Practice: Create a function to print ONLY the numbers of numlist that are divisble by 3. Hint: use the MOD operator (a % b) to find the remainder when a is divided by b. . numlist = [&quot;3&quot;,&quot;4&quot;,&quot;9&quot;,&quot;76&quot;,&quot;891&quot;] for num in numlist: if int(num) % 3 == 0: print( num + &quot; is divisible by 3&quot;) continue else: continue . 3 is divisible by 3 9 is divisible by 3 891 is divisible by 3 . Homework/Binary Adaptation: Create a python function that will convert a decimal number 1-255 to binary using mathematical operations and powers of 2. Challenge: add frontend with javascript or html. . def takeinput(ct): numtype = input(ct+&quot;: int or bin?&quot;) num = input(ct+&quot;: please enter your number&quot;) if numtype == &quot;int&quot;: num = int(num) return num def bintoint(s): ct = 0 ans = 0 for i in s[::-1]: if i == &quot;1&quot;: ans += 2**ct ct += 1 return ans def inttobin(num): if num == 0: return 0 ct = 0 ans = &quot;&quot; while(2**ct &lt;= num): ct += 1 ct -= 1 while(ct &gt;= 0): if num &gt;= 2**ct: num -= 2**ct ans += &quot;1&quot; else: ans += &quot;0&quot; ct -= 1 return ans num1 = takeinput(&quot;1&quot;) num2 = takeinput(&quot;2&quot;) if type(num1) == type(&quot;a&quot;): num1 = bintoint(num1) if type(num2) == type(&quot;a&quot;): num2 = bintoint(num2) print(&quot;decimal sum: &quot;+str(num1+num2)) print(&quot;binary sum: &quot;+str(inttobin(num1+num2))) print(&quot;decimal difference: &quot;+str(num1-num2)) if num1 &gt;= num2: print(&quot;binary difference: &quot;+str(inttobin(num1-num2))) else: print(&quot;binary difference: -&quot;+str(inttobin(num2-num1))) print(&quot;decimal product: &quot;+str(num1*num2)) print(&quot;binary product: &quot;+str(inttobin(num1*num2))) print(&quot;decimal quotient: &quot;+str(num1//num2)) print(&quot;binary quotient: &quot;+str(inttobin(num1//num2))) print(&quot;decimal remainder: &quot;+str(num1%num2)) print(&quot;binary remainder: &quot;+str(inttobin(num1%num2))) . &#39;10000&#39; . 3.4 Strings(Show video 1) . Vocab: fill in the blanks using the video . Index is a number representing a position, like a character&#39;s position in a string or a string&#39;s position in a list. Concatenation is connecting two strings into one. Length is the number of characters or elements in a string or array, respectively. A substring is a section of a string, containing some or all of the characters. . What is psuedocode? . Pseudocode is writing out a program in plain language with keywords that are used to refer to common coding concepts. . Can you think of some benefits of using pseudocode prior to writing out the actual code? . Choose an everyday activity | Imagine that you are providing instructions for this activity to a person who has never done it before | Challenge someone to do the steps you wrote out | Ex. Brushing Teeth . Pick up your toothbrush | Rinse toothbrush | Pick up toothpaste | Place toothpaste on the toothbrush | Rinse toothbrush again | Brush teeth in a circular motion | Spit | Wash mouth | Rinse toothbrush | You have brushed your teeth! | Sleeping . Finish all other work | walk to the bathroom | turn on the light | pick up the brush | apply paste onto the brush | rub the brush throughly through your teeth | wash your mouth and the brush | walk to your bed | spread out the blanket on the bedsheet | If the temperature is cold, then spread a second blanket | turn off the light | lie down on the bed with your head on the pillow | cover yourself with the blanket | Sleep | Substring/Length Practice: change the print functions to print &quot;hello&quot;, &quot;bye&quot;, and the string length . #the substring will have the characters including the index &quot;start&quot; to the character BEFORE the index &quot;end&quot; #len(string) will print the length of string string = &quot;hellobye&quot; print(string[0:5]) print(string[5:8]) print(len(string)) . hello bye 8 . Concatenation Practice: combine string1 and string2 to make string3, then print string3. . string1 = &quot;computer&quot; string2 = &quot;science&quot; string3 = string1 + string2 print(string3) . computerscience . Homework/List Adaptation: create a function that prints the name of each string in the list and the string&#39;s length. Challenge: add frontend with javascript or html. . names = [&quot;jaden&quot;,&quot;max&quot;,&quot;dylan&quot;,&quot;orlando&quot;] def length(list): for string in list: print(string, len(string)) length(names) . jaden 5 max 3 dylan 5 orlando 7 . Stuck? . Check out what we did. | . Have any questions? . Ask us if you have any questions! | . Notes: . Using coding, we can do math and algebra as we would in math class with variables | We can use operators like +, - , *, /, **, and % | % represents the remainder after division, so 23 % 4 = 3 | We can use conditionals, fuctions and loops to manipulate varuables in our program. | Strings and arrays can be acessed with index, which represents the position withing that list or array in which an element or character is stored. | While indexes in most pogramming languages begin with 0, indexes on the AP Exam and pseudocode begin with 1, as we would count. | Pseudocode is instructions to represent what a certain program does without useing code | Pseudocode can be helpful for others who are trying to read our code so they understand the gist of a program. | Substrings can be taken from strings to acess a range of incices in a string. | Strings can be concatonated together using the + symbol, &quot;jkcd&quot; + &quot;sj&quot; = &quot;jkcdsj&quot; | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/week-13/big-idea-3/2022/11/18/expressions-and-strings.html",
            "relUrl": "/week-13/big-idea-3/2022/11/18/expressions-and-strings.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Python Binary operations program",
            "content": "def takeinput(ct): numtype = input(ct+&quot;: int or bin?&quot;) num = input(ct+&quot;: please enter your number, must be a positive integer&quot;) if numtype == &quot;int&quot;: num = int(num) return num def bintoint(s): ct = 0 ans = 0 for i in s[::-1]: if i == &quot;1&quot;: ans += 2**ct ct += 1 return ans def inttobin(num): if num == 0: return 0 ct = 0 ans = &quot;&quot; while(2**ct &lt;= num): ct += 1 ct -= 1 while(ct &gt;= 0): if num &gt;= 2**ct: num -= 2**ct ans += &quot;1&quot; else: ans += &quot;0&quot; ct -= 1 return ans num1 = takeinput(&quot;1&quot;) num2 = takeinput(&quot;2&quot;) if type(num1) == type(&quot;a&quot;): num1 = bintoint(num1) if type(num2) == type(&quot;a&quot;): num2 = bintoint(num2) print(&quot;decimal sum: &quot;+str(num1+num2)) print(&quot;binary sum: &quot;+str(inttobin(num1+num2))) print(&quot;decimal difference: &quot;+str(num1-num2)) if num1 &gt;= num2: print(&quot;binary difference: &quot;+str(inttobin(num1-num2))) else: print(&quot;binary difference: -&quot;+str(inttobin(num2-num1))) print(&quot;decimal product: &quot;+str(num1*num2)) print(&quot;binary product: &quot;+str(inttobin(num1*num2))) print(&quot;decimal quotient: &quot;+str(num1//num2)) print(&quot;binary quotient: &quot;+str(inttobin(num1//num2))) print(&quot;decimal remainder: &quot;+str(num1%num2)) print(&quot;binary remainder: &quot;+str(inttobin(num1%num2))) . decimal sum: 25 binary sum: 11001 decimal difference: -1 binary difference: -1 decimal product: 156 binary product: 10011100 decimal quotient: 0 binary quotient: 0 decimal remainder: 12 binary remainder: 1100 .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/Binary",
            "relUrl": "/Binary",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Binary hacks",
            "content": "Binary Math with Conversions . Plus Binary Octal Base 5 Base 11 Hexadecimal Decimal Character Minus . +1 | 00000000 | 0 | 0 | 0 | 0 | 0 | nil | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/posts/binary",
            "relUrl": "/posts/binary",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "APCSP Final Blog Post",
            "content": "Final Exam: . Proof of completion: | Score = 49/50 = 98% | Question that I got wrong below: An open protocol isn’t owned by any company or organization, and are accessible to anyone on the internet. They create a standardized system for anything on the internet to use, making devide to device communication easier Night at the Musuem: . | . | The night at the musuem event was quite enjoyable, as I was able to see not only projects from my fellop APCSP and APCSA students, but I was able to look at a lot of cool projects from other fine arts classes which I found interesting. | Other APCSP and APCSA projects: A calendar website which allowed you to add and remove events | A clock app which enabled you to see the time in several countries, use a stopwatch or timer | An APCSA group made a project that allowed you to input as many numbers as you like, and it would give you statistical data relating to those numbers | . | A suggestion that I would make to improve the event would be to include some kind of suggested guide or order to make sure all visitors got a glimpse at every class’s work. | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/finale/",
            "relUrl": "/finale/",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "APCSP Big Idea 4 - The Internet",
            "content": "4.1 Notes . Packet is a small amount of data | Sent through a road | IETF manages standard development connecting internet | Network access layer connects hadwaes of devices | Internet layer data transmisssion - router finds paths to next stop | Autonomous ystems are when internet providers interact | Transport layers: tcp: 3 way handshake, udp: more relaxed | WWW is not the internet: linked datapages | More resources = more failsafe procedure/redundancy | trace path from device to device Proof of Completion: . . | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/idea4.1/",
            "relUrl": "/idea4.1/",
            "date": " • Oct 16, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Python API for wikipedia",
            "content": "import wikipediaapi . wiki_wiki = wikipediaapi.Wikipedia(&#39;en&#39;) page_py = wiki_wiki.page(&#39;Python_(programming_language)&#39;) . page_py = wiki_wiki.page(&#39;Python_(programming_language)&#39;) print(&quot;Page - Exists: %s&quot; % page_py.exists()) # Page - Exists: True page_ele = wiki_wiki.page(&#39;Elephant&#39;) print(&quot;Page - Exists: %s&quot; % page_ele.exists()) page_john = wiki_wiki.page(&#39;John Cena&#39;) print(&quot;Page - Exists: %s&quot; % page_john.exists()) page_missing = wiki_wiki.page(&#39;dfhjhjkgdsjhkfs&#39;) print(&quot;Page - Exists: %s&quot; % page_missing.exists()) . Page - Exists: True Page - Exists: True Page - Exists: True Page - Exists: False . wiki_wiki = wikipediaapi.Wikipedia(&#39;en&#39;) print(&quot;Page - Title: %s&quot; % page_john.title) # Page - Title: Python (programming language) print(&quot;Page - Summary: %s&quot; % page_john.summary[0:1000]) # Page - Summary: Python is a widely used high-level programming language for . Page - Title: John Cena Page - Summary: John Felix Anthony Cena ( SEE-nə; born April 23, 1977) is an American professional wrestler, actor, and former rapper. He is currently signed to WWE. Widely regarded as one of the greatest professional wrestlers of all time, he is tied with Ric Flair for the most world championship reigns in professional wrestling history.Cena moved to California in 1998 to pursue a career as a bodybuilder, and switched to professional wrestling in 1999 before making his debut for Ultimate Pro Wrestling (UPW). He signed with the World Wrestling Federation (WWF, now WWE) in 2001 and was assigned to Ohio Valley Wrestling (OVW), its developmental territory. After moving to WWE&#39;s SmackDown roster in 2002, Cena gained fame and success after adopting the character of a trash-talking rapper. He won his first singles title, the United States Championship, in 2004. The next year, he won the WWE Championship, and his character soon changed into a clean-cut and heroic one. He led the company as its franchise play . print(page_john.fullurl) . https://en.wikipedia.org/wiki/John_Cena . for title in page_john.categories.keys(): print(&quot;%s: %s&quot; % (title, page_john.categories[title])) . Category:1977 births: Category:1977 births (id: ??, ns: 14) Category:21st-century American male actors: Category:21st-century American male actors (id: ??, ns: 14) Category:21st-century American male musicians: Category:21st-century American male musicians (id: ??, ns: 14) Category:21st-century American rappers: Category:21st-century American rappers (id: ??, ns: 14) Category:21st-century professional wrestlers: Category:21st-century professional wrestlers (id: ??, ns: 14) Category:All Wikipedia articles written in American English: Category:All Wikipedia articles written in American English (id: ??, ns: 14) Category:All articles with unsourced statements: Category:All articles with unsourced statements (id: ??, ns: 14) Category:American car collectors: Category:American car collectors (id: ??, ns: 14) Category:American football offensive linemen: Category:American football offensive linemen (id: ??, ns: 14) Category:American game show hosts: Category:American game show hosts (id: ??, ns: 14) Category:American male film actors: Category:American male film actors (id: ??, ns: 14) Category:American male professional wrestlers: Category:American male professional wrestlers (id: ??, ns: 14) Category:American male rappers: Category:American male rappers (id: ??, ns: 14) Category:American male television actors: Category:American male television actors (id: ??, ns: 14) Category:American male voice actors: Category:American male voice actors (id: ??, ns: 14) Category:American people of English descent: Category:American people of English descent (id: ??, ns: 14) Category:American people of French-Canadian descent: Category:American people of French-Canadian descent (id: ??, ns: 14) Category:American philanthropists: Category:American philanthropists (id: ??, ns: 14) Category:American professional wrestlers of Italian descent: Category:American professional wrestlers of Italian descent (id: ??, ns: 14) Category:American sportspeople of Italian descent: Category:American sportspeople of Italian descent (id: ??, ns: 14) Category:American television hosts: Category:American television hosts (id: ??, ns: 14) Category:Articles with BIBSYS identifiers: Category:Articles with BIBSYS identifiers (id: ??, ns: 14) Category:Articles with BNE identifiers: Category:Articles with BNE identifiers (id: ??, ns: 14) Category:Articles with BNF identifiers: Category:Articles with BNF identifiers (id: ??, ns: 14) Category:Articles with FAST identifiers: Category:Articles with FAST identifiers (id: ??, ns: 14) Category:Articles with GND identifiers: Category:Articles with GND identifiers (id: ??, ns: 14) Category:Articles with ISNI identifiers: Category:Articles with ISNI identifiers (id: ??, ns: 14) Category:Articles with J9U identifiers: Category:Articles with J9U identifiers (id: ??, ns: 14) Category:Articles with LCCN identifiers: Category:Articles with LCCN identifiers (id: ??, ns: 14) Category:Articles with MusicBrainz identifiers: Category:Articles with MusicBrainz identifiers (id: ??, ns: 14) Category:Articles with NKC identifiers: Category:Articles with NKC identifiers (id: ??, ns: 14) Category:Articles with NLK identifiers: Category:Articles with NLK identifiers (id: ??, ns: 14) Category:Articles with NTA identifiers: Category:Articles with NTA identifiers (id: ??, ns: 14) Category:Articles with PLWABN identifiers: Category:Articles with PLWABN identifiers (id: ??, ns: 14) Category:Articles with RERO identifiers: Category:Articles with RERO identifiers (id: ??, ns: 14) Category:Articles with SUDOC identifiers: Category:Articles with SUDOC identifiers (id: ??, ns: 14) Category:Articles with VIAF identifiers: Category:Articles with VIAF identifiers (id: ??, ns: 14) Category:Articles with WORLDCATID identifiers: Category:Articles with WORLDCATID identifiers (id: ??, ns: 14) Category:Articles with hCards: Category:Articles with hCards (id: ??, ns: 14) Category:Articles with short description: Category:Articles with short description (id: ??, ns: 14) Category:Articles with unsourced statements from April 2022: Category:Articles with unsourced statements from April 2022 (id: ??, ns: 14) Category:Articles with unsourced statements from February 2017: Category:Articles with unsourced statements from February 2017 (id: ??, ns: 14) Category:Articles with unsourced statements from March 2019: Category:Articles with unsourced statements from March 2019 (id: ??, ns: 14) Category:Articles with unsourced statements from May 2021: Category:Articles with unsourced statements from May 2021 (id: ??, ns: 14) Category:Articles with unsourced statements from October 2018: Category:Articles with unsourced statements from October 2018 (id: ??, ns: 14) Category:CS1 Spanish-language sources (es): Category:CS1 Spanish-language sources (es) (id: ??, ns: 14) Category:Catholics from Florida: Category:Catholics from Florida (id: ??, ns: 14) Category:Catholics from Massachusetts: Category:Catholics from Massachusetts (id: ??, ns: 14) Category:Charity fundraisers (people): Category:Charity fundraisers (people) (id: ??, ns: 14) Category:Childfree: Category:Childfree (id: ??, ns: 14) Category:Columbia Records artists: Category:Columbia Records artists (id: ??, ns: 14) Category:Commons category link is on Wikidata: Category:Commons category link is on Wikidata (id: ??, ns: 14) Category:East Coast hip hop musicians: Category:East Coast hip hop musicians (id: ??, ns: 14) Category:Exercise physiologists: Category:Exercise physiologists (id: ??, ns: 14) Category:Internet memes: Category:Internet memes (id: ??, ns: 14) Category:Living people: Category:Living people (id: ??, ns: 14) Category:Male actors from Massachusetts: Category:Male actors from Massachusetts (id: ??, ns: 14) Category:Male actors from Tampa, Florida: Category:Male actors from Tampa, Florida (id: ??, ns: 14) Category:Musicians from Tampa, Florida: Category:Musicians from Tampa, Florida (id: ??, ns: 14) Category:NWA/WCW/WWE United States Heavyweight Champions: Category:NWA/WCW/WWE United States Heavyweight Champions (id: ??, ns: 14) Category:OVW Heavyweight Champions: Category:OVW Heavyweight Champions (id: ??, ns: 14) Category:Pages using embedded infobox templates with the title parameter: Category:Pages using embedded infobox templates with the title parameter (id: ??, ns: 14) Category:Pages using infobox musical artist with associated acts: Category:Pages using infobox musical artist with associated acts (id: ??, ns: 14) Category:Pages using infobox person with multiple spouses: Category:Pages using infobox person with multiple spouses (id: ??, ns: 14) Category:People from Land o&#39; Lakes, Florida: Category:People from Land o&#39; Lakes, Florida (id: ??, ns: 14) Category:People from West Newbury, Massachusetts: Category:People from West Newbury, Massachusetts (id: ??, ns: 14) Category:Players of American football from Massachusetts: Category:Players of American football from Massachusetts (id: ??, ns: 14) Category:Pop rappers: Category:Pop rappers (id: ??, ns: 14) Category:Professional wrestlers from Florida: Category:Professional wrestlers from Florida (id: ??, ns: 14) Category:Professional wrestlers from Massachusetts: Category:Professional wrestlers from Massachusetts (id: ??, ns: 14) Category:Rappers from Florida: Category:Rappers from Florida (id: ??, ns: 14) Category:Rappers from Massachusetts: Category:Rappers from Massachusetts (id: ??, ns: 14) Category:Short description matches Wikidata: Category:Short description matches Wikidata (id: ??, ns: 14) Category:Spokespersons: Category:Spokespersons (id: ??, ns: 14) Category:Sportspeople from Essex County, Massachusetts: Category:Sportspeople from Essex County, Massachusetts (id: ??, ns: 14) Category:Sportspeople from Tampa, Florida: Category:Sportspeople from Tampa, Florida (id: ??, ns: 14) Category:Springfield College (Massachusetts) alumni: Category:Springfield College (Massachusetts) alumni (id: ??, ns: 14) Category:Springfield Pride football players: Category:Springfield Pride football players (id: ??, ns: 14) Category:Television personalities from Florida: Category:Television personalities from Florida (id: ??, ns: 14) Category:Television producers from Florida: Category:Television producers from Florida (id: ??, ns: 14) Category:Television producers from Massachusetts: Category:Television producers from Massachusetts (id: ??, ns: 14) Category:Use American English from October 2019: Category:Use American English from October 2019 (id: ??, ns: 14) Category:Use mdy dates from February 2022: Category:Use mdy dates from February 2022 (id: ??, ns: 14) Category:WWE Champions: Category:WWE Champions (id: ??, ns: 14) Category:Wikipedia articles needing clarification from May 2020: Category:Wikipedia articles needing clarification from May 2020 (id: ??, ns: 14) Category:Wikipedia indefinitely move-protected pages: Category:Wikipedia indefinitely move-protected pages (id: ??, ns: 14) Category:Wikipedia indefinitely semi-protected biographies of living people: Category:Wikipedia indefinitely semi-protected biographies of living people (id: ??, ns: 14) Category:World Heavyweight Champions (WWE): Category:World Heavyweight Champions (WWE) (id: ??, ns: 14) Category:Wrestling Observer Newsletter award winners: Category:Wrestling Observer Newsletter award winners (id: ??, ns: 14) . for s in page_john.sections: print(&quot;%s: %s - %s&quot; % (&quot;*&quot; * (1), s.title, s.text[0:100])) . *: Early life - John Felix Anthony Cena was born in West Newbury, Massachusetts, on April 23, 1977, the son of Carol *: Professional wrestling career - *: Professional wrestling style and persona - *: Acting career - *: Music career - In addition to his wrestling career, Cena is a rapper. He performed his fifth WWE theme song, &#34;Basic *: Other ventures - *: In popular culture - His catchphrase &#34;You Can&#39;t See Me&#34; originates from his early days of wrestling in the WWE where he w *: Personal life - Cena resides in Land o&#39; Lakes, Florida.He has said numerous times that he does not want to have chil *: Filmography - *: Awards and nominations - *: Championships and accomplishments - *: Notes - *: References - *: External links - John Cena on WWE.com John Cena at IMDb John Cena on Twitter John Cena&#39;s profile at Cagematch.net .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/2022/10/09/wikiapi.html",
            "relUrl": "/2022/10/09/wikiapi.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;You are not subscribed to this API.&#34;} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions # AP Video Notes # Video #1:- Logic Error: Algorithmic mistake- Syntax Error: language mistakes, not following language rule | Runtime Error: Program Crashes, &quot;bug&quot;, cannot complete process, /0, wrong data type, forever loop | Overflow Error, not enough memory # Video #2: | Syntax Errors are the easiest to debug, as the output shows where the error is | Logic errors are hard to notice, make testcases that work/don&#39;t work, border cases hand tracing can be useful with loops | . | Use debuggers and/or print statements # Video #3: | &quot;How will we know if a program is working properly&quot; - program specifications | try corner and border cases to make sure that it will work | test, find mistakes, edit, update. # Proof: | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. # My fix: I printed i+1, as each letter was one less that it should have been | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter z is the 26 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. # My Fix: I did the same as before, and moved the initialization of the Count | . letter = input(&quot;What letter would you like to check?&quot;) count = 0 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count+1) + &quot; letter in the alphabet&quot;) count += 1 . The letter x is the 24 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) # My Fix: Changed the initial value of i from 0 to 1 | . evens = [] i = 1 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [1, 3, 5, 7, 9] . This code should output the odd numbers from 0 - 10 using a while loop. . See Above . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . My Fix: . I checked the remainder when divided by 2 to be 1 rather than 0 . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. # My Fix: Change if for the remainder with five to elif | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) while item != &quot;stop&quot;: total += menu[item] #print(total) item = input(&quot;Please select an item from the menu&quot;) #code should add the price of the menu items selected by the user print(&quot;$&quot;,round(total,3)) . Menu burger $3.99 fries $1.99 drink $0.99 $ 6.97 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "1.3 Program Design",
            "content": "Video Notes: . Daily Video 1: . All Programs start with an idea | People start investigating the problem | Requirements/Constraints Constraints can be time, resources | User interests | . | user surver and testing | interviews | Brainstorm | storyboard | Plan user experience | laying out interface | organizing modules | Testing strategy | Requirements describe how a program should behave | list of user interactions | . | prototype, then keepr refining | A LOT OF TESTING | testing, feedback, reflection, repreat Daily Video 2: . | Mostly group projects | everyone gets credit and their names should be on the documentation | bugs are assigned for different people | comments | you can use code from other, but you need to credit | authors name and program(works cited) Daily Video 3: . | Program documentation describes program, spece, functiions, methods,and more | use documentation to keep track of progress | it helps with efficiency and memory over time | shows respnse to bug | Use comments in language or a text document | comments make collaboration | comments in python follow # | comments in java follow //, /*, or /** along with other languages | comment blocks in scratch can be minimized Proof of quiz completion: . https://azeem-khan1.github.io/fastpages-project/hacks/programdesign_1-3#other-hacks . | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/markdown/2022/10/02/onepointthree.html",
            "relUrl": "/markdown/2022/10/02/onepointthree.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "AWS Hacks",
            "content": "Output of Curl . . Before File . . After File(Editing from outside) . . Running Group Flask with public IP . . Various Commands . .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/markdown/2022/10/02/AWShacks.html",
            "relUrl": "/markdown/2022/10/02/AWShacks.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "JavaScript Tutorial",
            "content": "| Gallery/ | Science | Grades | About | Table | Notes | Javascript | API | Snake | . . JavaScript references . JavaScript is the most important language you need to learn as a frontend developer. It&#39;s a great first language for web developers to learn. . W3Schools - reference | feecodecamp.org - pbl . | javascript30.com - pbl . | . console.log output . Output to console using the classic programming introduction using a &quot;Hello, World!&quot; message. . The command or function is console.log() | &quot;Hello, World&quot; is a String literal. This is the referred to as Static text, as it does not change. | &quot;Hello, World&quot; is a parameter to the console.log command. | The console.log command outputs the parameter to the console, so you can see it in this Jupyter document. | Note, in a Web Application, console.log is used for debugging and is not visible from the browser via HTML. It is used behind the scenes, when using Inspect-&gt;Console from the browser. | . console.log(&quot;Hello, World!&quot;); . Hello, World! . console.log output showing use of variable . This second example is a sequence of code, two or more lines forms a sequence. This example defines a variable, then outputs the msg to terminal. . The variable &quot;var msg =&quot; is used to capture the data | The console.log(msg) outputs to console | . var msg = &quot;Hello, World!&quot;; console.log(msg); . Hello, World! . console.log output showing use of a function . This example passes the previously defined variable &quot;msg&quot; to the newly defined &quot;function logIt(output)&quot;. . There are two steps in the code, the definition of the function and the call to the function. &quot;function logIt(output) {}&quot; and everything between curly braces is the definitions of the function. | &quot;logIt(msg)&quot; is the call to the function, this actually activates the function. If you remove this line you will not receive any output to console. | . | Since the variable &quot;msg&quot; was defined in previous cell, it is used a parameter when calling the logMessage function. | . function logIt(output) { console.log(output); } logIt(msg); . Hello, World! . Showing reuse of a function . Now that a function is defined, it can be called from any of the subsequent cell in the Jupyter notebook. A function/method, is a process of creating a procedural abstraction. This a programming practice to promote reuse versus coding the same thing over and over. . First call sends a different string message | Second call sends a number | . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse of logIT Hello, Students! 2022 . Dynamic or Loosely typed language (string, number) . JavaScript is a loosely typed language, meaning you don&#39;t have to specify what type of information will be stored in a variable in advance. The variable type is determined at runtime. This is similar to Python and most interpretive languages. Java which is a compiled language is strongly typed, thus you will see string, integer, double, and object in the source code. In JavaScript, the &quot;typeof&quot; keyword returns the type. . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2020); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string ; hello number ; 2020 object ; [ 1, 2, 3 ] . Build a Person Function/Class object and JSON . JavaScript functions have special properties and syntax is shown in many ways. In fact, a Class in JavaScript is a special function. Jupyter Notebooks seems to be more friendly to &quot;function&quot; definitions versus &quot;Class&quot;, thus this lesson uses &quot;function&quot; and &quot;prototype&quot; versus &quot;Class&quot;. . Definition of function allows for a collection of data, the &quot;function Person&quot; allows programmer to retain name, github id, and class of designation. | Definition of a prototype allow for the definition of a method associated with the function , the &quot;Person.prototype.toJSON&quot; allows the collection of data to be expressed in a json/string versus JavaScript object. | Instance of a function, the &quot;var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977)&quot; line makes a variable &quot;teacher&quot; which is an object representation of &quot;function Person&quot;. | . // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript logItType(teacher); // before role logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . Build a Classroom Array/List of Persons and JSON . Many key elements are shown again. New elements include... . Building an Array, &quot;var students&quot; is an array of many persons | Building a Classroom, this show forEach iteration through an array and .push adding to an array. These are key concepts in all programming languages. | . // define a student Array of Person(s) var students = [ new Person(&quot;Chinmay&quot;, &quot;tonyhieu&quot;, 2022), new Person(&quot;Bria&quot;, &quot;B-G101&quot;, 2023), new Person(&quot;Allie&quot;, &quot;xiaoa0&quot;, 2023), new Person(&quot;Tigran&quot;, &quot;Tigran7&quot;, 2023), new Person(&quot;Rebecca&quot;, &quot;Rebecca-123&quot;, 2023), new Person(&quot;Vidhi&quot;, &quot;unknown&quot;, 2024) ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; }, Person { name: &#39;Anthony&#39;, ghID: &#39;tonyhieu&#39;, classOf: 2022, role: &#39;Student&#39; }, Person { name: &#39;Bria&#39;, ghID: &#39;B-G101&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Allie&#39;, ghID: &#39;xiaoa0&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Tigran&#39;, ghID: &#39;Tigran7&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Rebecca&#39;, ghID: &#39;Rebecca-123&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Vidhi&#39;, ghID: &#39;unknown&#39;, classOf: 2024, role: &#39;Student&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } . IJavaScript and Table formatting using toHTML method . This example builds a Classroom method _toHTML which is passed to the IJavaScript interpreter $$.html which renders output similarly to a real website. . JavaScript in the _toHTML method is broken into three parts... Style part is building CSS inline formatting | Body part is constructing the Table Rows (tr), Table Headings (th), and Table Data (td). The table data is obtained from a Classroom object. The JavaScript for loop allows the construction of a new row of data for each person object in the Array. | Return part creates the HTML fragment for rendering | . | The last line in the example $$.html is IJavaScript HTML interpreter and by passing the parameter of the _toHTML method it obtains HTML to render | . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Anthony | tonyhieu | 2022 | Student | Bria | B-G101 | 2023 | Student | Allie | xiaoa0 | 2023 | Student | Tigran | Tigran7 | 2023 | Student | Rebecca | Rebecca-123 | 2023 | Student | Vidhi | unknown | 2024 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . . .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/techtalk/javascript",
            "relUrl": "/techtalk/javascript",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "APCSP Big Idea 2 - Program Purpose and Function Notes",
            "content": "1.2 video 1: . Lots of different computing innovations | guiding questions(social media): why does innovation exist?(communicating over a long distance) | what problems does it solve?(save time and money required to communicate with someone far away) | what does it allow us to do that we previously couldn’t? 1.2 video 2: . | . | input is something taken in by a user(text, audio, video, text, touch) | output is what the program does or returns to you passed, usually based on the input(same types as above) | events are initiated through input | code is not necessarily in order segments are triggered when event occurs 1.2 video 3: . | . | program = collection of statements | group of statements = code segment(executed according to event) | description of code segments state what it does so a person could use it for their own purpose. Proof of completion: . . | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/idea1.2/",
            "relUrl": "/idea1.2/",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Focus and Habits",
            "content": "10 Habits for Good Mental Health and a Good and Happy life . We can always improve our well being | Material things and life circumstances doesn’t matter all that much | Takes effort to become happier | Recognize that your mind lies to you about what makes you happy | Spend more time with others | Helping others more than yourself | Make time for gratitude | Healthy practices for the body(eating healthy, exercising) | Be in the present moment | Prioritize time over money | Things I can do to use these ideas . Before I go to bed, think about what I did that day, what I can do better, and what I did well on | Stop wanting/asking things from other people, because all it will do is make me want more things | Implement all my other points :) | Think about what I want, and analyze weather it is a material thing that will make me temporarily happy or not | Play games and hang out with friends, and teach my little sister stuff | Notice other people’s situations, and try to help them if you can, and if they need to. | Similar to #1, take a couple of minutes at night to think about what I was grateful for that day | Play badminton with my dad and friends more | Think about what I’m doing at all times, including subconscious things like eating or biking | I don’t really make money, but having better time management skills | My goals for this year . Get straight A’s in all of my classes | Gain better work and study habits for school and extracurricular activities | Keep time for myself to be in the moment | Note of Gratitude . I am grateful for my parents, teachers, and friends for supporting me along m high school journey. In this class, I’d like to thank my scrum team, comprising of Varalu, Azeem, and Colin, for answering whatever questions I have, and genuinely being great and funny people who continue to motivate me . Thank You! .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/habits/",
            "relUrl": "/habits/",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "APCSP Big Idea 1 - Collaboration Notes",
            "content": "1.1 Part 1 Notes . Collaboration is an essential part of any kind of computer science or work in the industry | Famous things are made through collaboration, like facebook and the Super Mario games | Collaboration allows for multiple ideas from multiple different backgrounds to come together an make something amazing | It expands out horizons and helps everyone 1.1 Part 2 Notes . | Pair programming is a concept where two programmers collaborate on a project The driver does the code, while the navigator gives suggestions the navigator needs to find a happy balance between forcing the driver to do things and being fully hands-off | . | . | Think-Pair-Share is a technique used to get an idea and fully develop it Think of an idea | combine with a partner’s idea | share to the class | . | Comments in code help yourself and other people know what you did and what you will do | Collaboration tools repl | github | shared doc | friends and family | . | . .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/idea1/",
            "relUrl": "/idea1/",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Sprint Backlog",
            "content": "Educational Tips Fun Zone (Create Task Ideas) Blogging and Review . look over common exam questions | input based studying tool | Debug code without help | . Watch test prep youtube videos | choose your own adventure type game | create a study calendar | . Khan Academy APCSP | movie review app | partner quiz and study | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/sprintbacklog/",
            "relUrl": "/sprintbacklog/",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "Pseudocode ranking app",
            "content": "Rank everything app . Show ready screen with input box | prompts user for name of list | maintain a list of all the items in ranked order | repeat the following until user inputs “DONE”: once name is given, prompts user for first item | initially keep the best item as the first and the worst item as the last | repeat the following steps until best item is the same as worst item: ask the user if the item is better or worse than the middle of best and worst; | if it is better, worst becomes the middle | if not, best becomes the middle | . | add the new element to the location that has been found | . | after it is over, show all the elements in sorted order with numbers for the rankings | maybe also have settings for music, backgrounds, and themes | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/markdown/2022/09/12/create.html",
            "relUrl": "/markdown/2022/09/12/create.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Pseudocode App Ninjago Quiz",
            "content": "Psuedocode for project (&amp; plaintext) . Theme: Ninjago . Initialize variable correct to 0 Initialize variable num_question to 3 . SHOW Ready to begin page . IF user click on ready button, show first question | . SHOW Question one Screen Four buttons show question on top: Which Season does Ninjago: Prime Empire follow the pattern of? . Skybound . Possession . Secrets of Forbidden Spinjitzu . Crystalized . IF they press the correct button (skybound), display a quick correct message and move to question 2 ELSE they chose wrongly, display a quick incorrect message with correct answer (skybound) and move to question 2 . SHOW Question two Screen Four buttons What is the name of the forest that Lloyd and Sensei Garmadon escape through . Hiroshi’s Labrynth . Pirmeval’s Eye . Forest of Transquility . Jankikai Jungle . IF they press the correct button (Hiroshi’s Labrynth), display a quick correct message and move to question 3 ELSE they chose wrongly, display a quick incorrect message with correct answer (Hiroshi’s Labrynth) and move to question 3 . SHOW Question 3 Screen Four buttons in the lego.com game Chen&#39;s return, how many golden bricks can you attain? . 25 . 13 . 40 . 160 . IF they press the correct button (13), display a quick correct message and move to question 3 ELSE they chose wrongly, display a quick incorrect message with correct answer (13) and move to question 3 . After all three questions: move to the final screen Has a button to reset displays the score of the player and the percent of the score LINK .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/markdown/2022/09/11/ninjacode.html",
            "relUrl": "/markdown/2022/09/11/ninjacode.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "An Example Markdown Post",
            "content": "I switched my theme to the hacker theme(screenshot below) | Something I noticed was that my pages didn’t show up with this theme | so no matter how cool it looked, i couldn’t access my pages :( | Finally, i settled with dark mode | .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/markdown/2022/09/05/htmlhacks.html",
            "relUrl": "/markdown/2022/09/05/htmlhacks.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Python Lists and Dictionaries",
            "content": "sentence = &quot;&quot; counter = {}#Creates a dictionary to store characters and the number of times they show up distinct = []#Creates list to store distinct characters while sentence != &quot;done!&quot;:#repeats code till user inputs done sentence = input(&quot;Enter a Sentence&quot;)#asks for user input for i in sentence: if i not in counter: counter[i] = 0#for every new letter, create a new entry in the dictionary and add it to the distinct list distinct.append(i) counter[i] += 1#add to entry of dictionary for i in counter: print(i,&quot; : &quot;,counter[i])#prints each entry of dictionary print(sorted(distinct))#sorts distinct characters in alphabetical order and prints sorted list . f : 11 d : 11 j : 6 : 4 s : 7 h : 9 k : 2 1 : 1 2 : 1 % : 2 ^ : 2 &amp; : 4 b : 1 u : 5 8 : 9 7 : 10 w : 2 e : 5 * : 4 c : 1 9 : 6 ( : 1 - : 2 = : 2 n : 7 i : 2 t : 2 3 : 2 5 : 1 v : 1 r : 3 ! : 3 @ : 1 y : 2 R : 1 Y : 1 H : 1 C : 1 ] : 1 o : 1 [&#39; &#39;, &#39;!&#39;, &#39;%&#39;, &#39;&amp;&#39;, &#39;(&#39;, &#39;*&#39;, &#39;-&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;5&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;=&#39;, &#39;@&#39;, &#39;C&#39;, &#39;H&#39;, &#39;R&#39;, &#39;Y&#39;, &#39;]&#39;, &#39;^&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;n&#39;, &#39;o&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;y&#39;] .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/hacks/2022/08/31/pylist.html",
            "relUrl": "/hacks/2022/08/31/pylist.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Vlumun",
            "content": "Almost 800 million people globally spend 10% of their family budgeting on healthcare (World Health Organization). Whether it be sickness, prescription medical care, surgeries and treatments, or medical treatment, costs for simple treatments are exorbitant. This unnecessary cost for simple, high quality healthcare affects no group more than the people of developing countries. However, developing countries lack both the expertise and the infrastructure to have high quality medical care. Healthcare in developing countries has poor infrastructure and very expensive treatments. Most medical professionals in these countries also do not follow an evidence-based approach to diagnosing and treating a patient (Peabody, John W., et al). Even with constant attention and investment in developing regions, life expectancy is still a full ten years under developed regions and under-five mortality rates are nine times higher than those in developed countries, about 54 per 1,000 live births (United Nations). Without taking the proper steps to reevaluate both the developing and developed healthcare systems and taking meaningful steps to stop these problems, we may never be able to live in a world where we are all guaranteed the basic human right of survival. . The United Nations along with the World Health Organization have taken steps to either reevaluate or work with the healthcare sector in developing countries. An older initiative taken by the UN, WHO, and other global medical bodies was to eradicate polio from the face of the earth. Adopted in 1988, the Global Polio Eradication Initiative (GPEI) mainly focuses on delivering oral vaccines to communities at high risk of polio (Centers for Disease Control and Prevention). So far the GPEI has eradicated 99.9% of all known poliovirus globally (Centers for Disease Control and Prevention). Such initiatives are targeted and improve specific portions of the medical industry, but don’t support developing countries enough. The UN has set up a set of Sustainable Development Goals aimed towards developing countries. In specific, three: equal healthcare for all, will provide the largest benefit towards developing nations (United Nations). While the timeline for these goals end between 2020 and 2030, considerable progress has been made towards completion. . Canada’s current medical healthcare system is a free, decentralized universal healthcare system. The 13 provinces of Canada fund the healthcare plan that is available to all permanent residents and citizens (Authors Roosa Tikkanen, et al). The funding works towards hospital bills, even with some procedures coming at no cost to the patient. From a doctorial perspective, the Canadian Medical Association (CMA) connects physicians and practitioners nationally, allowing for a quick exchange of information and an increase of knowledge through all of Canada’s provinces (Canadian Medical Association). The government of Canada also utilizes the Medical Council of Canada (MCC) as a major board for testing incoming medical students. The MCCQE (Medical Council of Canada Qualifying Examination) is a two part exam that tests all medical students on their proficiency in the subjects at hand, and also regulates medical licenses throughout Canada (Canadian Medical Association). To assist developing countries’ healthcare systems, Canada joined the WHO’s ACT-Accelerator partnership, which sends COVID-19 vaccines, tests, and therapeutics to those in need globally, and has donated $40 million Canadian dollars to epidemic prevention and preparedness (Canda). Canada has a streamlined, connected, and sophisticated healthcare system that allows for the prosperity of its citizens. . To combat this, the Delegation of Canada seeks to allow medical practitioners in developing countries to be better educated. The Delegation of Canada also seeks to connect healthcare providers with the fiscal resources to provide free universal healthcare to their patients. The education initiatives will be implemented through a United Nations Subcommittee dedicated to creating and enforcing evidence-based diagnosis and treatment. A WHO sponsored curriculum will be created regarding evidence-based diagnosis and treatment. This curriculum will be distributed to developing countries, and also offer incentives for doctors to join a UN sponsored NGO to enforce rules upon doctors who sign up. This NGO will consist of supporting fiscal sponsors, delegates of member-states dedicated to the cause, volunteering trained professionals, a board of inspectors, and the doctors who sign on as well. Doctors who are a part of the NGO, will pay those who abide by its guidelines livable wages to help support their families and communities. Members of the NGO can also communicate about epidemics around the world, allowing them to remain connected to the world. This allows doctors that are a part of the UNUDDC to be fiscally supported, allowing rural economies to burgeon, and can allow doctors to communicate effectively with the global community. This multifaceted plan will be funded by sponsoring and signing countries. .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/2022/08/29/vlumun.html",
            "relUrl": "/2022/08/29/vlumun.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Python Quiz",
            "content": "This is my quiz about python! First, I greet the user, and ask them if they are ready Whatever their response is, I respond appropriately and begin he quiz I generate two lists, one with 5 questions and the other with the corresponding answers to the questions I iterate through the list, asking the user for the answer to the input If the answer is correct, I add one to the score I then print the number they have correct so far At the end, i print their total number correct out of 5, and calculate the percentage . import getpass, sys print(&quot;Hello, &quot;+getpass.getuser()+&quot;. Prepare to fail(but not actually)&quot;) print(&quot;You will be graded out of 5 questions and will have a final score out of 5 and a percentage&quot;) if input(&quot;Ready?&quot;) == &quot;yes&quot;: print(&quot;Great, let&#39;s go!&quot;) else: print(&quot;Too bad, we&#39;re still doing it&quot;) questions = [&quot;What command is used to include other functions that were previously developed?&quot;, &quot;What command is used to evaluate correct or incorrect response in this example?&quot;, &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;, &quot;How many equal signs do you need to use in a comparison?&quot;, &quot;What keyword defines a function?&quot;] answers = [&quot;import&quot;,&quot;if&quot;,&quot;expression&quot;,&quot;2&quot;,&quot;def&quot;] #Keeping a list of questions and answers to compare correct = 0 for i in range(1,6): ans = input(&quot;Question &quot;+str(i)+&quot;: &quot;+questions[i-1])#Asking question to user if ans == answers[i-1]: print(ans+&quot; is correct &quot;) correct+=1#Adding to score if answer is correct else: print(ans+&quot; is wrong&quot;) print(str(correct)+&quot;/&quot;+str(i)) print(&quot;Final Score: &quot;+str(correct)+&quot;/&quot;+&quot;5 &quot;+str(correct*100/5)+&quot;%&quot;)#Multipyling by 100 to get percentages print(&quot;Good Job!&quot;) . Hello, chinmay. Prepare to fail(but not actually) You will be graded out of 5 questions and will have a final score out of 5 and a percentage Too bad, we&#39;re still doing it import is correct 1/1 if is correct 2/2 expression is correct 3/3 da is wrong 3/4 def is correct 4/5 Final Score: 4/5 80.0% Good Job! .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/hacks/2022/08/28/quiz.html",
            "relUrl": "/hacks/2022/08/28/quiz.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "An Example Markdown Post",
            "content": "Hello! . See, I can do this stuff . Can you read this? .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/markdown/2022/08/24/firstpost.html",
            "relUrl": "/markdown/2022/08/24/firstpost.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Bash Notebook",
            "content": "Bash Hacks . echo &quot;_________________________________________________________&quot; echo &quot;Hack #1: Using bash to check versions of things&quot; echo &quot;_________________________________________________________&quot; bash --version conda --version python --version git --version echo &quot;_________________________________________________________&quot; echo &quot;Hack #2: Using anaconda to list all the tools&quot; echo &quot;_________________________________________________________&quot; conda list echo &quot;_________________________________________________________&quot; echo &quot;Hack #3: Using git commands to update the repository&quot; echo &quot;_________________________________________________________&quot; echo &quot;use commands git add [filename], git commit[filename], and git push&quot; . _________________________________________________________ Hack #1: Using bash to check versions of things _________________________________________________________ GNU bash, version 5.0.17(1)-release (x86_64-pc-linux-gnu) Copyright (C) 2019 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt; This is free software; you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. conda 4.13.0 Python 3.9.12 git version 2.25.1 _________________________________________________________ Hack #2: Using anaconda to list all the tools _________________________________________________________ # packages in environment at /home/chinmay/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.8.0 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 _________________________________________________________ Hack #3: Using git commands to update the repository _________________________________________________________ use commands git add [filename], git commit[filename], and git push . Automating python and java installation . export password=PASSWORD echo $password echo $password | sudo -S apt update # update package list echo $password | sudo -S apt upgrade # upgrade packages echo $password | sudo -S apt install python2 # install python2 for package dependencies echo $password | sudo -S apt install python3 python3-pip # install python3 and pip3 for development python --version # version of python3 should be shown echo $password | sudo -S apt install default-jdk default-jre # java install java --version # java runtime version javac --version # java compiler version sudo apt install unzip . PASSWORD Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease Hit:3 http://security.ubuntu.com/ubuntu focal-security InRelease Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease Reading package lists... Done Building dependency tree Reading state information... Done 9 packages can be upgraded. Run &#39;apt list --upgradable&#39; to see them. Reading package lists... Done Building dependency tree Reading state information... Done Calculating upgrade... Done The following packages will be upgraded: base-files libxslt1.1 linux-libc-dev motd-news-config open-vm-tools python-apt-common python3-apt python3-distupgrade ubuntu-release-upgrader-core 9 upgraded, 0 newly installed, 0 to remove and 0 not upgraded. 3 standard security updates Need to get 2263 kB of archives. After this operation, 0 B of additional disk space will be used. Do you want to continue? [Y/n] Abort. Reading package lists... Done Building dependency tree Reading state information... Done python2 is already the newest version (2.7.17-2ubuntu4). 0 upgraded, 0 newly installed, 0 to remove and 9 not upgraded. Reading package lists... Done Building dependency tree Reading state information... Done python3 is already the newest version (3.8.2-0ubuntu2). python3-pip is already the newest version (20.0.2-5ubuntu1.6). 0 upgraded, 0 newly installed, 0 to remove and 9 not upgraded. Python 3.9.12 Reading package lists... Done Building dependency tree Reading state information... Done default-jdk is already the newest version (2:1.11-72). default-jre is already the newest version (2:1.11-72). 0 upgraded, 0 newly installed, 0 to remove and 9 not upgraded. openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu120.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu120.04, mixed mode, sharing) javac 11.0.16 Reading package lists... Done Building dependency tree Reading state information... Done unzip is already the newest version (6.0-25ubuntu1). 0 upgraded, 0 newly installed, 0 to remove and 9 not upgraded. . Checking if directory exists,and seeing if the APCSP directory is there. . echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/fastpages # change vscode to different name to test git clone export project=$project_dir/chinmay_fastpages # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/chinmaydr/chinmay_fastpages&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/chinmay/fastpages exists. Directory /home/chinmay/fastpages/chinmay_fastpages exists. . Listing all files in my directory . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned /home/chinmay/fastpages/chinmay_fastpages list top level or root of files with project pulled from github 2022-05-15-07-21-16.png README.md _notebooks assets 2022-05-15-07-24-25.png _action_files _pages docker-compose.yml 2022-05-15-07-25-15.png _config.yml _plugins images Gemfile _fastpages_docs _posts index.html LICENSE _includes _sass Makefile _layouts _word list again with hidden files pulled from github . Gemfile _pages .. LICENSE _plugins .devcontainer.json Makefile _posts .git README.md _sass .gitattributes _action_files _word .github _config.yml assets .gitignore _fastpages_docs docker-compose.yml 2022-05-15-07-21-16.png _includes images 2022-05-15-07-24-25.png _layouts index.html 2022-05-15-07-25-15.png _notebooks list all files in long format total 409 drwxr-xr-x 1 chinmay chinmay 512 Aug 24 14:17 . drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 .. -rw-r--r-- 1 chinmay chinmay 420 Aug 22 14:29 .devcontainer.json drwxr-xr-x 1 chinmay chinmay 512 Aug 24 14:38 .git -rw-r--r-- 1 chinmay chinmay 84 Aug 22 14:29 .gitattributes drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 .github -rw-r--r-- 1 chinmay chinmay 161 Aug 22 14:29 .gitignore -rw-r--r-- 1 chinmay chinmay 207007 Aug 22 14:29 2022-05-15-07-21-16.png -rw-r--r-- 1 chinmay chinmay 90979 Aug 22 14:29 2022-05-15-07-24-25.png -rw-r--r-- 1 chinmay chinmay 81691 Aug 22 14:29 2022-05-15-07-25-15.png -rwxr-xr-x 1 chinmay chinmay 1304 Aug 22 14:29 Gemfile -rw-r--r-- 1 chinmay chinmay 11351 Aug 22 14:29 LICENSE -rwxr-xr-x 1 chinmay chinmay 1422 Aug 22 14:29 Makefile -rwxr-xr-x 1 chinmay chinmay 3632 Aug 23 14:21 README.md drwxr-xr-x 1 chinmay chinmay 512 Aug 23 14:21 _action_files -rw-r--r-- 1 chinmay chinmay 3693 Aug 23 14:21 _config.yml drwxr-xr-x 1 chinmay chinmay 512 Aug 23 14:21 _fastpages_docs drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 _includes drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 _layouts drwxr-xr-x 1 chinmay chinmay 512 Aug 28 14:40 _notebooks drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 _pages drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 _plugins drwxr-xr-x 1 chinmay chinmay 512 Aug 24 14:26 _posts drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 _sass drwxr-xr-x 1 chinmay chinmay 512 Aug 23 14:21 _word drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 assets -rwxr-xr-x 1 chinmay chinmay 1136 Aug 22 14:29 docker-compose.yml drwxr-xr-x 1 chinmay chinmay 512 Aug 23 14:21 images -rw-r--r-- 1 chinmay chinmay 526 Aug 24 14:17 index.html . Looking for/ listing my markdown files . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . Look for posts /home/chinmay/fastpages/chinmay_fastpages/_posts total 8 -rwxr-xr-x 1 chinmay chinmay 1966 Aug 22 14:29 2020-01-14-test-markdown-post.md -rw-r--r-- 1 chinmay chinmay 64 Aug 23 14:16 2022-08-24-firstpost.md -rw-r--r-- 1 chinmay chinmay 720 Aug 22 14:29 README.md . Looking for/ listing my notebooks . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . Look for notebooks /home/chinmay/fastpages/chinmay_fastpages/_notebooks total 4060 -rw-r--r-- 1 chinmay chinmay 3162384 Aug 22 14:29 2020-02-20-test.ipynb -rw-r--r-- 1 chinmay chinmay 1179 Aug 24 14:35 2022-08-23-chinmaynb.ipynb -rw- 1 chinmay chinmay 578413 Aug 28 14:40 2022-08-24-bashtest.html -rw-r--r-- 1 chinmay chinmay 0 Aug 24 13:53 2022-08-24-bashtest.ipynb -rw-r--r-- 1 chinmay chinmay 771 Aug 22 14:29 README.md drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 ghtop_images drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 my_icons -rw-r--r-- 1 chinmay chinmay 42 Aug 23 15:01 script.py . Looking for/listing images . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images # this should exist per fastpages pwd ls -l . Look for images in notebooks, print working directory, list files bash: cd: /home/chinmay/fastpages/chinmay_fastpages/_notebooks/images: No such file or directory /home/chinmay/fastpages/chinmay_fastpages/_notebooks total 4060 -rw-r--r-- 1 chinmay chinmay 3162384 Aug 22 14:29 2020-02-20-test.ipynb -rw-r--r-- 1 chinmay chinmay 1179 Aug 24 14:35 2022-08-23-chinmaynb.ipynb -rw- 1 chinmay chinmay 578413 Aug 28 14:40 2022-08-24-bashtest.html -rw-r--r-- 1 chinmay chinmay 0 Aug 24 13:53 2022-08-24-bashtest.ipynb -rw-r--r-- 1 chinmay chinmay 771 Aug 22 14:29 README.md drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 ghtop_images drwxr-xr-x 1 chinmay chinmay 512 Aug 22 14:29 my_icons -rw-r--r-- 1 chinmay chinmay 42 Aug 23 15:01 script.py . Printing data in my first markdown . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project/_posts echo &quot;show the contents of 2022-08-24-firstpost.md&quot; echo &quot;&quot; cat 2022-08-24-firstpost.md # show contents of file, in this case markdown echo &quot;&quot; echo &quot;end of 2022-08-24-firstpost.md&quot; . Navigate to project, then navigate to area wwhere files were cloned show the contents of 2022-08-24-firstpost.md # Hello! #### See, I can do this stuff ###### Can you read this? end of 2022-08-24-firstpost.md .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/week%201/2022/08/24/bashtest.html",
            "relUrl": "/week%201/2022/08/24/bashtest.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "My first Python Notebook",
            "content": "print(&quot;Hello, My name is Chinmay&quot;) . Hello, My name is Chinmay .",
            "url": "https://chinmaydr.github.io/chinmay_fastpages/hacks/2022/08/23/chinmaynb.html",
            "relUrl": "/hacks/2022/08/23/chinmaynb.html",
            "date": " • Aug 23, 2022"
        }
        
    
  

  
  
      ,"page0": {
          "title": "ASW Hacks",
          "content": "Output of Curl . . Before File . . After File . . Running Azeem’s Blog . .",
          "url": "https://chinmaydr.github.io/chinmay_fastpages/posts/2022-10-02-AWShacksmd",
          "relUrl": "/posts/2022-10-02-AWShacksmd",
          "date": ""
      }
      
  

  

  
      ,"page2": {
          "title": "Science",
          "content": "This website is powered by fastpages 1. . . Welcome to my science blog! . Here is where you’ll find all my science videos, coding projects, notes, and more! . Video on the Four Fundamental Forces: . Link . Video on Interstellar Travel: . Link . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://chinmaydr.github.io/chinmay_fastpages/Science/",
          "relUrl": "/Science/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . Hi Everyone! . ..* My name is Chinmay Diwakar Ramamurthy . ..* I go to Del Norte High School, and I’m in the AP CompSci Principles Class, but you all knew that . ..* I’m part of Del Norte’s robotics team, Team Optix#3749, where I am a member of the electrical team which manages all te wiring and the electrical system of the robot . ..* In my free time(I know right, what free time?) I like to code on my own, as well as read and write my own stories . So yeah! Welcome to my blog, and have fun reading the….like 3 pages I have . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://chinmaydr.github.io/chinmay_fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Frontend",
          "content": "| Gallery/ | Science | Grades | About | Table | Notes | Javascript | API | Snake | .",
          "url": "https://chinmaydr.github.io/chinmay_fastpages/frontend/",
          "relUrl": "/frontend/",
          "date": ""
      }
      
  

  
      ,"page5": {
          "title": "Gallery",
          "content": "This website is powered by fastpages 1. . . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://chinmaydr.github.io/chinmay_fastpages/gallery/",
          "relUrl": "/gallery/",
          "date": ""
      }
      
  

  

  

  
      ,"page8": {
          "title": "Notes",
          "content": "This website is powered by fastpages 1. . Week 0 . - Installed Everything we needed . - Anaconda . - WSL . - VsCode . - Github . - Made a copy of the fastpages repository . - Made our first python notebook . - Created a markdown file . - added everything to out blog . Week 1 . - Learned about bash . - created a bash notebook . - learned about verification with bash . - completed the bash hacks to answer some basic bas questions . - Updated out blogs with cool new pages and cometics(LIKE THIS!!!) . - Made new pages . - Inserted images . - Made another python notebook . - Learned basic python syntax . - created a program that would quiz the user and calculate the score . Week 2 . Learned about Html Changed blog theme | created a table with tags to see the different posts | . | Expanded my python knowledge Leaned about dictionaries and lists | learned about ways to iterate over lists and dictionaries while and for loops, recursion Week 3 . | . | . | Created accounts on Code.org made simple quiz with partner(Ninjago quiz with Varalu) | Created plans for my own app(random movie review app) | . | Created a scrum board as a to-do list of all the things I need to complete | Created a sprint backlog table listing all of my study ideas and plans | . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://chinmaydr.github.io/chinmay_fastpages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  
  

  
      ,"page19": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://chinmaydr.github.io/chinmay_fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}